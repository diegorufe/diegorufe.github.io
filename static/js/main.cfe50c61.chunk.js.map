{"version":3,"sources":["rfreactlib/context/index.js","rfreactlib/base/baseComponent/index.js","rfreactlib/utils/UtilsCommons.js","rfreactlib/beans/commons/ResponseMethod.js","rfreactlib/utils/UtilsLog.js","rfreactlib/utils/UtilsError.js","rfreactlib/utils/UtilsDate.js","rfreactlib/utils/UtilsString.js","rfreactlib/i18n/index.js","rfreactlib/i18n/locales/index.js","rfreactlib/error/index.js","rfreactlib/style/index.js","rfreactlib/background/index.js","rfreactlib/session/index.js","rfreactlib/base/baseLogin/index.js","rfreactlib/tooltip/index.js","rfreactlib/header/index.js","rfreactlib/menu/index.js","rfreactlib/dashboard/index.js","rfreactlib/spinners/hourglass/index.js","rfreactlib/tabView/index.js","rfreactlib/body/index.js","rfreactlib/dom/index.js","rfreactlib/base/baseApp/index.js","rfreactlib/base/baseService/index.js","rfreactlib/base/baseCrudService/index.js","rfreactlib/modal/index.js","rfreactlib/resolvers/context/index.js","rfreactlib/constants/index.js","rfreactlib/permission/index.js","app/i18n/locales/index.js","app/core/config/index.js","rfreactlib/loaderconfig/index.js","App.js","rfreactlib/router/tabRoute/index.js","rfreactlib/router/appRouter/index.js","serviceWorker.js","index.js"],"names":["RFContext","React","createContext","i18n","dom","contextResolver","other","RFError","message","name","stack","code","undefined","Error","BaseComponent","props","beforeLoadData","state","defaultStateProps","asyncLoad","changed","stateError","hasError","this","hideToolTip","defaultRender","chr4","Math","random","toString","slice","showWaitStatus","tab","hideWaitStatus","addMessage","level","errorMsg","addMessageError","__","error","setStateError","changeState","setState","responseMethod","UtilsCommons","isNotNull","Component","defaultProps","data","isNull","type","array","length","isArrayNotEmpty","ReponseMethod","errrorCode","messageError","errorName","UtilsLog","DEBUG_ENABLED","ERROR_ENABLED","isDebugConsoleEnabled","console","log","ignored","exception","isErrorConsoleEnabled","UtilsError","fn","response","result","apply","then","catch","getResponseMethodFromException","errorCode","UtilsString","isNotEmpty","date","isTypeOf","UtilsDate","TYPE_OF_DATE","toISOString","Date","TYPE_OF_STRING","trim","isEmpty","uniqueIDChr4","str","split","reverse","join","I18nTranslate","translations","finalLocales","locales","translation","locale","i","Object","keys","forEach","key","keyLocale","language","text","_","isNil","eval","ex","en","ErrorHandlerComponent","returnData","errorInfo","propsState","style","whiteSpace","componentStack","children","StyleComponent","className","ConfigStyleApp","mapStyleProperties","styleBuilder","BackgroundComponent","loading","fallbackIndex","onLoad","bind","onError","fetchImage","src","clearEvents","failed","image","removeEventListener","fallbackImages","Image","addEventListener","loader","propTypes","PropTypes","object","string","RFUserSession","id","token","nick","permisions","modules","getUserLogged","userLogged","sessionStorage","getItem","assign","JSON","parse","setUserLogged","setItem","stringify","BaseLogin","loginClick","nickValue","document","getElementById","value","passwordValue","usserLogedReturn","app","serviceLogin","login","placeholder","onClick","ToolTipComponent","idParent","findById","parent","for","parentNode","ReactDOM","findDOMNode","onmouseover","event","toolTipContainer","createElement","classList","add","display","body","appendChild","innerText","left","offsetLeft","top","offsetTop","offsetHeight","offsetWidth","onmouseout","HeaderComponent","logoutClick","showHideMenu","closeTabs","menuComponent","getElementsByClassName","bodyComponent","remove","dataHeaderMenu","headerMenuTemplateFn","renderButtonCloseTabs","tabViewComponent","closeAllTabs","func","MenuComponent","dataMenu","menuContentTemplateFn","title","componentView","element","elementParent","menuActive","querySelectorAll","icon","addTab","contains","DashboardComponent","header","menu","HourglassSpinnerComponent","Tab","index","componentViewRender","uniqueID","TabViewHeaderComponent","tabs","push","tabHeaderComponent","first","renderElement","TabViewHeaderItemComponent","onClickTitle","onClickClose","changeTab","closeTab","active","bool","TabViewBodyComponent","tabBodyComponent","renderWithoutIframe","TabViewBodyItemComponent","renderComponent","jsonTab","fallback","TabViewComponent","activeTab","splice","numTabs","renumerateTabs","renderValue","headerComponent","renderHeader","renderBody","BodyComponent","renderTabView","Dom","zIndex","getUpdatedZIndex","uniqueId","spinnerDiv","span","render","spinner","parentElement","removeChild","messages","messagesToast","getUpdatedZIndexStr","messagesToastIcon","messagesToastIconClose","innerHTML","closeMessageToast","messagesToastTitle","messagesToastTitleContent","setTimeout","closeMessage","resizeWindowEvent","BaseApp","activetab","fetchInterceptor","configStyleApp","getConfigStyle","loadConfigBaseApp","renderStyle","srcBackground","renderMenu","defaultStyleOverrideApp","registerFetchInterceptor","defaultConfigDom","isUserLogged","renderHome","renderLogin","fetchIntercept","register","request","url","config","requestError","Promise","reject","usserLogged","headers","get","replace","status","a","json","responseError","window","storeConfigStyleApp","BaseService","baseHost","pathService","bodyData","getFetchRequest","dataReturn","ok","Headers","append","options","method","getHeaders","Request","fetch","BaseCrudService","pathCount","pathRead","pathList","pathLoadNew","pathAdd","pathEdit","pathDelete","filters","joins","fetchPostService","getRealPathHost","self","applyFunctionWithHandlerError","count","fields","orders","limit","list","pkValues","read","loadNew","edit","Modal","baseComponent","modalComponent","ModalComponent","focusInput","component","focus","select","closeModal","refModal","createRef","onFocusInput","idFirsFocusableInput","idLastFocussableInput","refFirstFocus","focusableElement","current","modal","ref","classModal","onFocus","childs","idFocusComponent","preventDefault","force","target","modalId","renderError","params","ContextResolver","permisionsAll","mapServices","mapUrlsServices","nameService","service","pathsService","permission","componentUrl","componentRender","modals","modalCreated","titleModal","styleClassModal","RFConstants","LOADER_CONFIG_PROPERTIES","CONFIRM_COMPONENT","Permission","loadConfigApp","mapOtherProperties","arLocales","PERMISIONSALL","lazy","loadConfigPermisionsAll","CONTEXTRESOLVER","extaData","BASESERVICES","loaderconfig","App","onMenuClickLevel0","onMenuClickLevel1","TabRoute","errorTest","functionLoadConfig","tabParam","match","beforeComponents","functionLoadBeforeComponents","AppRoute","AppComponent","defaultOherRoutes","otherRoutes","path","Boolean","location","hostname","usserSession","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cfe50c61.chunk.js","sourcesContent":["import React from 'react';\r\n/**\r\n * Const for context \r\n */\r\nconst RFContext = React.createContext({\r\n   /**\r\n    * Set i18n variable \r\n    */\r\n    i18n: null,\r\n    /**\r\n     * Set the dom class to manage operations from document \r\n     */\r\n    dom: null,\r\n    /**\r\n     *  Bean for resolve access\r\n     */\r\n    contextResolver: null,\r\n    /**\r\n     * Map other properties\r\n     */\r\n    other: {}\r\n});\r\n\r\nexport default RFContext;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport RFContext from \"rfreactlib/context\";\r\nimport UtilsCommons from \"../../utils/UtilsCommons\";\r\n\r\n\r\n/**\r\n * Class error extends error class for manage erros in view\r\n */\r\nexport class RFError extends Error {\r\n  constructor(message, name, stack, code) {\r\n    super(message);\r\n    if (name != null && name != undefined) {\r\n      this.name = name;\r\n    }\r\n    if (stack != null && stack != undefined) {\r\n      this.stack = stack;\r\n    }\r\n    this.code = -1;\r\n    if (code != null && code != undefined) {\r\n      this.code = code;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Base class for all components from  application\r\n */\r\nexport default class BaseComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.beforeLoadData();\r\n    this.state = this.defaultStateProps();\r\n    this.asyncLoad = false;\r\n\r\n    this.asyncLoad = this.props.asyncLoad || false;\r\n\r\n    if (this.asyncLoad == null || this.asyncLoad == undefined) {\r\n      this.asyncLoad = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method execute before load data\r\n   */\r\n  beforeLoadData() {}\r\n\r\n  /**\r\n   * Method to get default State props\r\n   */\r\n  defaultStateProps() {\r\n    return {\r\n      changed: false,\r\n      stateError: {\r\n        hasError: true,\r\n        message: \"\",\r\n        code: -1,\r\n        name: \"\",\r\n        stack: \"\",\r\n      },\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Default render for component\r\n   */\r\n  defaultRender() {\r\n    return <span></span>;\r\n  }\r\n\r\n  /**\r\n   * Render data in view for component\r\n   */\r\n  render() {\r\n    // Hide all tooltip\r\n    this.hideToolTip();\r\n    // If has error thow error\r\n    if (this.props.stateError != undefined && this.props.stateError.hasError) {\r\n      // When has error throw this and catch wiht error handler\r\n      // TODO pendiend send to log rest service\r\n      throw new RFError(\r\n        this.stateError.message,\r\n        this.stateError.name,\r\n        this.stateError.stack,\r\n        this.stateError.code\r\n      );\r\n    } else {\r\n      return this.defaultRender();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method for generate unique id for components\r\n   */\r\n  uniqueID() {\r\n    return (\r\n      this.chr4() +\r\n      this.chr4() +\r\n      \"-\" +\r\n      this.chr4() +\r\n      \"-\" +\r\n      this.chr4() +\r\n      \"-\" +\r\n      this.chr4() +\r\n      \"-\" +\r\n      this.chr4() +\r\n      this.chr4() +\r\n      this.chr4()\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Method for generate chr4 unique data\r\n   */\r\n  chr4() {\r\n    return Math.random().toString(16).slice(-4);\r\n  }\r\n\r\n  /**\r\n   * Method for hide tooltips\r\n   */\r\n  hideToolTip() {\r\n    RFContext.dom.hideToolTip();\r\n  }\r\n\r\n  /**\r\n   * Method for show wait status\r\n   */\r\n  showWaitStatus() {\r\n    RFContext.dom.showWaitStatus(this.props.tab);\r\n  }\r\n\r\n  /**\r\n   * Method for hide wait status\r\n   */\r\n  hideWaitStatus() {\r\n    RFContext.dom.hideWaitStatus(this.props.tab);\r\n  }\r\n\r\n  /**\r\n   * Method for show wait status in async mode\r\n   * @param {*} showWaitStatus true if show\r\n   */\r\n  showWaitStatusAsync(showWaitStatus) {\r\n    if (\r\n      showWaitStatus != null &&\r\n      showWaitStatus != undefined &&\r\n      showWaitStatus\r\n    ) {\r\n      this.showWaitStatus();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method for hide wait statis in async mode\r\n   * @param {*} hideWaitStatus true if hide\r\n   */\r\n  hideWaitStatusAsync(hideWaitStatus) {\r\n    if (\r\n      hideWaitStatus != null &&\r\n      hideWaitStatus != undefined &&\r\n      hideWaitStatus\r\n    ) {\r\n      this.hideWaitStatus();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method for add message succes\r\n   * @param {*} message to add\r\n   */\r\n  addMessageSucces(message) {\r\n    this.addMessage(message, \"SUCCES\");\r\n  }\r\n\r\n  /**\r\n   * Method for add message info\r\n   * @param {*} message to add\r\n   */\r\n  addMessageInfo(message) {\r\n    this.addMessage(message, \"INFO\");\r\n  }\r\n\r\n  /**\r\n   * Method for add message error\r\n   * @param {*} message to add\r\n   */\r\n  addMessageError(message) {\r\n    this.addMessage(message, \"ERROR\");\r\n  }\r\n\r\n  /**\r\n   * Method for add message warning\r\n   * @param {*} message to add\r\n   */\r\n  addMessageWarning(message) {\r\n    this.addMessage(message, \"WARNING\");\r\n  }\r\n\r\n  /**\r\n   * Method for add message\r\n   * @param {*} message to add\r\n   * @param {*} level is INFO, ERROR, SUCCESS, WARNING\r\n   */\r\n  addMessage(message, level) {\r\n    RFContext.dom.addMessage(this.props.tab, message, level);\r\n  }\r\n\r\n  /**\r\n   * TODO pending\r\n   * Method for resolve error\r\n   * @param {*} errorMsg  is the error for resolve\r\n   */\r\n  resolveError(errorMsg) {\r\n    if (errorMsg != null && errorMsg != undefined) {\r\n      let errorMsgKey = \"rf.error.generic\";\r\n      try {\r\n      } catch (ex) {}\r\n\r\n      this.addMessageError(RFContext.i18n.__(errorMsgKey));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method for set state error from error class\r\n   * @param {*} error is the error object produces error\r\n   * @param {*} code is the code from error\r\n   */\r\n  setStateErrorFromError(error, code) {\r\n    if (error != null && error != undefined) {\r\n      this.setStateError(error.message, code, error.name, error.stack);\r\n    } else {\r\n      this.setStateError(\"Generic\", -1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method for set state error in component. When has error component change and trohw error in render\r\n   * @param {*} message produces error\r\n   * @param {*} code  error\r\n   * @param {*} name  error\r\n   * @param {*} stack  error\r\n   */\r\n  setStateError(message, code, name, stack) {\r\n    this.props.stateError = {\r\n      hasError: true,\r\n      message: message,\r\n      code: code,\r\n      name: name,\r\n      stack: stack,\r\n    };\r\n    this.changeState();\r\n  }\r\n\r\n  /**\r\n   * Method for change state\r\n   */\r\n  changeState() {\r\n    this.setState({ changed: true });\r\n  }\r\n\r\n  /**\r\n   * Method for render error\r\n   * @param {*} responseMethod\r\n   */\r\n  renderError(responseMethod) {\r\n    if (UtilsCommons.isNotNull(this.props.tab)) {\r\n      // TODO change tabView page\r\n    } else {\r\n      // TODO localtion to error\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Properties for component\r\n */\r\nBaseComponent.propTypes = {\r\n  app: PropTypes.object,\r\n  modal: PropTypes.object,\r\n  tab: PropTypes.object,\r\n  permission: PropTypes.object,\r\n  asyncLoad: PropTypes.bool,\r\n  stateError: PropTypes.object,\r\n};\r\n\r\n/**\r\n * Default properties for component\r\n */\r\nBaseComponent.defaultProps = {\r\n  asyncLoad: false,\r\n  stateError: {\r\n    hasError: false,\r\n    message: null,\r\n    code: -1,\r\n    name: null,\r\n    stack: null,\r\n  },\r\n};\r\n","/**\r\n * Utilitie class for commons\r\n */\r\nexport default class UtilsCommons {\r\n  /**\r\n   * Method to check data is null\r\n   * @param {*} data to check\r\n   * @returns true if data is null or undefined\r\n   */\r\n  static isNull(data) {\r\n    return data == null || data == undefined;\r\n  }\r\n\r\n  /**\r\n   * Method to check data is not null\r\n   * @param {*} data to check\r\n   * @returns true if data is not null and not undefined\r\n   */\r\n  static isNotNull(data) {\r\n    return !UtilsCommons.isNull(data);\r\n  }\r\n\r\n  /**\r\n   * Method to check data is type of\r\n   * @param {*} data to check\r\n   * @param {*} type to check is type\r\n   * @returns true if data and type isNotNull and type is typeof == \"string\" and typeof data equals type\r\n   */\r\n  static isTypeOf(data, type) {\r\n    return (\r\n      UtilsCommons.isNotNull(data) &&\r\n      UtilsCommons.isNotNull(type) &&\r\n      typeof type == \"string\" &&\r\n      typeof data == type\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Method to check array is not empty\r\n   * @param {*} array to check\r\n   * @returns true if array is not null and length > 0\r\n   */\r\n  static isArrayNotEmpty(array) {\r\n    return UtilsCommons.isNotNull(array) && array.length > 0;\r\n  }\r\n\r\n  /**\r\n   * Method to check array is empty\r\n   * @param {*} array to check\r\n   * @returns true if array is null or empty\r\n   */\r\n  static isArrayEmpty(array) {\r\n    return !UtilsCommons.isArrayNotEmpty(array);\r\n  }\r\n}\r\n","import UtilsCommons from \"../../utils/UtilsCommons\";\r\n/**\r\n * Class for responses call methods\r\n */\r\nexport default class ReponseMethod {\r\n  constructor() {\r\n    this.data = null;\r\n    this.error = null;\r\n    this.errrorCode = -1;\r\n    this.messageError = null;\r\n    this.stack = null;\r\n    this.errorName = null;\r\n  }\r\n\r\n  /**\r\n   * Method to check has error\r\n   * @returns true if has error\r\n   */\r\n  hasError() {\r\n    return UtilsCommons.isNotNull(this.error);\r\n  }\r\n}\r\n","import UtilsCommons from \"./UtilsCommons\";\r\n\r\nexport default class UtilsLog {\r\n  static DEBUG_ENABLED = true;\r\n  static ERROR_ENABLED = true;\r\n\r\n  /**\r\n   * Method to checkd debug console is enabled\r\n   * @returns true if enabled false if not\r\n   */\r\n  static isDebugConsoleEnabled() {\r\n    return UtilsLog.DEBUG_ENABLED;\r\n  }\r\n\r\n  /**\r\n   * Method to checkd error console is enabled\r\n   * @returns true if enabled false if not\r\n   */\r\n  static isErrorConsoleEnabled() {\r\n    return UtilsLog.ERROR_ENABLED;\r\n  }\r\n\r\n  /**\r\n   * Method to debug console\r\n   * @param {*} data to debug\r\n   */\r\n  static async debug(data) {\r\n    try {\r\n      if (UtilsLog.isDebugConsoleEnabled()) {\r\n        console.log(data);\r\n      }\r\n    } catch (ignored) {}\r\n  }\r\n\r\n  /**\r\n   * Method to send error log\r\n   * @param {*} exception to send\r\n   */\r\n  static async error(exception) {\r\n    try {\r\n      if (UtilsCommons.isNotNull(exception)) {\r\n        // TODO send exception for log server\r\n        // Send error to console\r\n        if (UtilsLog.isErrorConsoleEnabled()) {\r\n          console.error(exception);\r\n        }\r\n      }\r\n    } catch (ignored) {}\r\n  }\r\n}\r\n","import ReponseMethod from \"../beans/commons/ResponseMethod\";\r\nimport UtilsCommons from \"../utils/UtilsCommons\";\r\nimport UtilsLog from \"../utils/UtilsLog\";\r\nimport UtilsString from \"../utils/UtilsString\";\r\n/**\r\n * Utilies class for error\r\n */\r\nexport default class UtilsError {\r\n  /**\r\n   * Method for apply funcion for handler in view error\r\n   * @param {*} fn for apply\r\n   */\r\n  static async applyFunctionWithHandlerError(fn) {\r\n    let response = new ReponseMethod();\r\n    try {\r\n      let self = this;\r\n      let result = fn.apply(this, arguments);\r\n      if (\r\n        UtilsCommons.isNotNull(result) &&\r\n        typeof result.then === \"function\" &&\r\n        typeof result.catch === \"function\"\r\n      ) {\r\n        try {\r\n          response.data = await result;\r\n        } catch (exception) {\r\n          UtilsLog.error(exception);\r\n          response.error = exception;\r\n        }\r\n      }\r\n      // if (UtilsLog.isDebugConsoleEnabled()) {\r\n      //   UtilsLog.debug(\r\n      //     \"Response applyAsyncFunctionWithHandlerError: \" +\r\n      //       JSON.stringify(response)\r\n      //   );\r\n      // }\r\n    } catch (exception) {\r\n      UtilsLog.error(exception);\r\n      response = UtilsError.getResponseMethodFromException(exception);\r\n    }\r\n    return response;\r\n  }\r\n\r\n  /**\r\n   * Method for get response method form exception\r\n   * @param {*} exception to set in response method\r\n   * @param {*} messageError to set in response method\r\n   * @param {*} errorCode to set in reponse method\r\n   * @returns response method with exception\r\n   */\r\n  static getResponseMethodFromException(exception, messageError, errorCode) {\r\n    const response = new ReponseMethod();\r\n    response.error = exception;\r\n\r\n    response.errrorCode = errorCode;\r\n\r\n    if (UtilsCommons.isNotNull(exception)) {\r\n      response.errorName = exception.name;\r\n      response.stack = exception.stack;\r\n      response.messageError = exception.message;\r\n    }\r\n\r\n    if (UtilsString.isNotEmpty(messageError)) {\r\n      response.messageError = messageError;\r\n    }\r\n\r\n    // Send exception to log\r\n    UtilsLog.error(exception);\r\n\r\n    return response;\r\n  }\r\n\r\n  /**\r\n   * Method to check response mehtod. If response method is null return response method with error\r\n   * @param {*} responseMethod to check\r\n   * @returns resposne method checked.\r\n   */\r\n  static checkResponseMethod(responseMethod) {\r\n    let result = responseMethod;\r\n    if (UtilsCommons.isNull(responseMethod)) {\r\n      result = UtilsError.getResponseMethodFromException(\r\n        new Error(\"Null response method\")\r\n      );\r\n    }\r\n    return result;\r\n  }\r\n}\r\n","import UtilsCommons from \"./UtilsCommons\";\r\n/**\r\n * Utilities class for data\r\n */\r\nexport default class UtilsDate {\r\n  /**\r\n   * Type of compare date\r\n   */\r\n  static TYPE_OF_DATE = \"date\";\r\n\r\n  /**\r\n   * Method for generate iso string for date\r\n   * @param {*} date to generate iso string date\r\n   * @returns date iso string if is not null and type of date\r\n   */\r\n  static toISOString(date) {\r\n    return UtilsCommons.isNotNull(date) &&\r\n      UtilsCommons.isTypeOf(date, UtilsDate.TYPE_OF_DATE)\r\n      ? date.toISOString()\r\n      : null;\r\n  }\r\n\r\n  /**\r\n   * Method for generate today date\r\n   * @returns today date\r\n   */\r\n  static today() {\r\n    return new Date();\r\n  }\r\n}\r\n","import UtilsCommons from \"./UtilsCommons\";\r\nimport UtilsDate from \"./UtilsDate\";\r\n/**\r\n * Utilitie class for strings\r\n */\r\nexport default class UtilsString {\r\n  /**\r\n   * Type of compare string\r\n   */\r\n  static TYPE_OF_STRING = \"string\";\r\n\r\n  /**\r\n   * Method to check data is empty\r\n   * @param {*} data to check\r\n   * @returns true if data is null or undefined or trim() == \"\" or typeof distinct string\r\n   */\r\n  static isEmpty(data) {\r\n    return (\r\n      UtilsCommons.isNull(data) ||\r\n      (!UtilsCommons.isTypeOf(data, UtilsString.TYPE_OF_STRING) &&\r\n        data.trim() == \"\")\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Method to check data is not empty\r\n   * @param {*} data to check\r\n   * @returns true if data is not empty false if empty null or undefined\r\n   */\r\n  static isNotEmpty(data) {\r\n    return !UtilsString.isEmpty(data);\r\n  }\r\n\r\n  /**\r\n   * Method for generante unique id with chr4 and iso date\r\n   * @returns unque id wiht chr4 concatenate with today iso date\r\n   */\r\n  static uniqueId() {\r\n    return UtilsString.uniqueIDChr4();\r\n  }\r\n\r\n  /**\r\n   * Method for generate unique id for components with chr4 concatenations\r\n   * @returns unique id with chr4 concatenations\r\n   */\r\n  static uniqueIDChr4() {\r\n    return (\r\n      UtilsString.chr4() +\r\n      UtilsString.chr4() +\r\n      \"-\" +\r\n      UtilsString.chr4() +\r\n      \"-\" +\r\n      UtilsString.chr4() +\r\n      \"-\" +\r\n      UtilsString.chr4() +\r\n      \"-\" +\r\n      UtilsString.chr4() +\r\n      UtilsString.chr4() +\r\n      UtilsString.chr4()\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Method for generate chr4 unique data\r\n   * @returns unique chr4 data\r\n   */\r\n  static chr4() {\r\n    return Math.random().toString(16).slice(-4);\r\n  }\r\n\r\n  /**\r\n   * Method for reverse string\r\n   * @param {*} str to reverse\r\n   */\r\n  static reverse(str) {\r\n    return str.split(\"\").reverse().join(\"\");\r\n  }\r\n}\r\n","import _ from \"lodash\";\r\nimport locales from \"./locales\";\r\n\r\n/**\r\n * I18n translator for application\r\n */\r\nclass I18nTranslate {\r\n\r\n    constructor(translations) {\r\n        let finalLocales = locales;\r\n\r\n        if (translations !== null && translations !== undefined && translations.length > 0) {\r\n            let translation = null;\r\n            let locale = null;\r\n            for (let i = 0; i < translations.length; i++) {\r\n                translation = translations[i];\r\n                Object.keys(translation).forEach(function (key) {\r\n                    locale = translation[key];\r\n                    Object.keys(locale).forEach(function (keyLocale) {\r\n                        finalLocales[key][keyLocale] = locale[keyLocale];\r\n                    });\r\n                });\r\n            }\r\n        }\r\n        this.translations = finalLocales;\r\n        // Set default language\r\n        this.language = 'en';\r\n    }\r\n\r\n    __(text) {\r\n        if (_.isNil(this.language)) return text;\r\n        if (_.isNil(this.translations[this.language])) return text;\r\n        //const translation = this.translations[this.language];\r\n        // For use multi modolue translation in json\r\n        try {\r\n            return eval('!_.isNil( this.translations[this.language].' + text + ') ?  this.translations[this.language].' + text + ' : ' + text + ';');\r\n        } catch (ex) {\r\n            return text;\r\n        }\r\n        //return !_.isNil(translation[text]) ? translation[text] : text;\r\n    }\r\n\r\n    setLocale(language) {\r\n        this.language = language;\r\n    }\r\n}\r\n\r\nexport default I18nTranslate;","// Suported locales default \r\nimport en from \"./en.json\";\r\n\r\nexport default { en };","import BaseComponent from \"../base/baseComponent\";\r\nimport React from \"react\";\r\n\r\n/**\r\n * Base error class for components\r\n */\r\nexport default class ErrorHandlerComponent extends BaseComponent {\r\n\r\n  \r\n  /**\r\n   * Method to get default state props\r\n   * Added error and errorInfo for show data when has error in a page\r\n   */\r\n  defaultStateProps() {\r\n    let returnData = { error: null, errorInfo: null };\r\n    let propsState = super.defaultStateProps();\r\n    if (propsState !== null && propsState !== undefined) {\r\n      Object.keys(propsState).forEach(function(key) {\r\n        returnData[key] = propsState[key];\r\n      });\r\n    }\r\n    return returnData;\r\n  }\r\n\r\n  /**\r\n   * Method to catch error in a component\r\n   * @param {*} error\r\n   * @param {*} errorInfo\r\n   */\r\n  componentDidCatch(error, errorInfo) {\r\n    // Catch errors in any components below and re-render with error message\r\n    this.setState({\r\n      error: error,\r\n      errorInfo: errorInfo\r\n    });\r\n    // You can also log error messages to an error reporting service here\r\n  }\r\n\r\n  defaultRender() {\r\n    if (this.state.errorInfo) {\r\n      // Error path\r\n      return (\r\n        <div>\r\n          <h2>Something went wrong.</h2>\r\n          <details style={{ whiteSpace: \"pre-wrap\" }}>\r\n            {this.state.error && this.state.error.toString()}\r\n            <br />\r\n            {this.state.errorInfo.componentStack}\r\n          </details>\r\n        </div>\r\n      );\r\n    }\r\n    // Normally, just render children\r\n    return this.props.children;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './index.css';\r\nimport BaseComponent from '../base/baseComponent';\r\n\r\n/**\r\n * Class for load style for application\r\n */\r\nexport default class StyleComponent extends BaseComponent {\r\n    defaultRender() {\r\n        return (<span className=\"styleSpan\"></span>)\r\n    }\r\n}\r\n\r\n/**\r\n * Class for load style default for app\r\n */\r\nexport class BaseStyle {\r\n    constructor(mapStyleProperties) {\r\n        this.mapStyleProperties = mapStyleProperties || {};\r\n    }\r\n\r\n    renderStyle() {\r\n        let styleBuilder = \":root {\";\r\n        if (this.mapStyleProperties != null && this.mapStyleProperties != undefined) {\r\n            let keys = Object.keys(this.mapStyleProperties);\r\n            if (keys != null && keys != undefined) {\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    if (keys[i] != null && keys[i] != undefined && this.mapStyleProperties[keys[i]] != null && this.mapStyleProperties[keys[i]] != undefined && this.mapStyleProperties[keys[i]].trim() != '') {\r\n                        styleBuilder = styleBuilder + \"  \" + keys[i] + \": \" + this.mapStyleProperties[keys[i]] + \"; \";\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        styleBuilder = styleBuilder + \"}\";\r\n        return (\r\n            <style>\r\n                {styleBuilder}\r\n            </style>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Class for load style default for app\r\n */\r\nexport class ConfigStyleApp extends BaseStyle {\r\n\r\n    constructor() {\r\n        super(\r\n            {\r\n                // For all aplication \r\n                \"--rf-fontColor\": \"#466289\",\r\n                \"--rf-buttonColor\": \"#466289\",\r\n                \"--rf-appBackColor\" : \"#DBE8F9\",\r\n\r\n                // Header after login \r\n                \"--rf-headerBackColor\": \"#466289\",\r\n                \"--rf-headerFontColor\": \"white\",\r\n\r\n                // Menu after login \r\n                \"--rf-menuBackColor\": \"#466289\",\r\n                \"--rf-menuFontColor\": \"white\",\r\n\r\n                // Body after login \r\n                \"--rf-bodyBackColor\": \"#DBE8F9\",\r\n\r\n                // TabView\r\n                \"--rf-tabFontColor\": \"#466289\",\r\n                \"--rf-tabBackColor\": \"#FFB739\",\r\n\r\n                // Card\r\n                \"--rf-cardHeaderBackColor\": \"#466289\",\r\n                \"--rf-cardBodyBackColor\": \"white\",\r\n                \"--rf-cardHeaderFontColor\": \"white\",\r\n                \"--rf-cardBorderColor\": \"#466289\",\r\n\r\n                // Input\r\n                \"--rf-inputFontColor\": \"black\",\r\n                \"--rf-inputBackColor\": \"white\",\r\n                \"--rf-inputBorderColor\": \"#466289\",\r\n                \"--rf-inputLabelColor\": \"#466289\",\r\n                \"--rf-inputFontColorDisabled\": \"black\",\r\n                \"--rf-inputBackColorDisabled\": \"#afacac\",\r\n                \"--rf-inputBorderDisabled\": \"#e8f4ff\",\r\n                \"--rf-inputBorderColorFocus\": \"#ffF\",\r\n                \"--rf-inputBackColorFocus\": \"#466289\",\r\n                \"--rf-inputFontColorFocus\": \"white\",\r\n                \"--rf-inputRequiredBackColor\": \"rgba(228, 74, 74, 0.836)\",\r\n                \"--rf-inputButtonFontColor\": \"#466289\",\r\n\r\n                // Toolbars\r\n                \"--rf-toolbarsButtonFontColor\": \"#466289\",\r\n\r\n                // Tooltips \r\n                \"--rf-toolTipsFontColor\": \"#466289\",\r\n\r\n                // Table\r\n                \"--rf-tableBackColor\": \"white\",\r\n                \"--rf-tableFontColor\": \"#466289\",\r\n                \"--rf-tableSortableHeaderBackColor\": \"#466289\",\r\n                \"--rf-tableSortableHeaderFontColor\": \"#466289\",\r\n                \"--rf-tableHeaderBackColor\": \"#466289\",\r\n                \"--rf-tableRowBorderColor\": \"#aeb9c7\",\r\n                \"--rf-tableSumaryFontColor\": \"#466289\",\r\n                \"--rf-tableButtonsPageFontColor\": \"#466289\",\r\n                \"--rf-tableButtonsPageBackColor\" :  \"#466289\",\r\n                \"--rf-tableRowActionFontColor\" : \"#466289\",\r\n\r\n                // Modals\r\n                \"--rf-modalsBackColor\" : \"white\",\r\n                \"--rf-modalsHeaderBackColor\" : \"#466289\",\r\n                \"--rf-modalsHeaderFontColor\" : \"white\",\r\n\r\n            }\r\n        );\r\n    }\r\n\r\n}","import React from 'react';\r\nimport './index.css';\r\nimport BaseComponent from '../base/baseComponent';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Class for load background for application\r\n */\r\nexport class BackgroundComponent extends BaseComponent {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            loading: true,\r\n            fallbackIndex: 0,\r\n            changed: false\r\n        };\r\n        this.onLoad = this.onLoad.bind(this);\r\n        this.onError = this.onError.bind(this);\r\n        this.fetchImage = this.fetchImage.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { src } = this.props;\r\n        this.fetchImage(src);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.clearEvents();\r\n    }\r\n\r\n    onLoad() {\r\n        this.clearEvents();\r\n        this.setState({ loading: false, failed: false });\r\n    }\r\n\r\n    /**\r\n     * Remove events for load image\r\n     */\r\n    clearEvents() {\r\n        if (this.image) {\r\n            this.image.removeEventListener('load', this.onLoad);\r\n            this.image.removeEventListener('error', this.onError);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Catch error load image\r\n     */\r\n    onError() {\r\n        const { fallbackImages } = this.props;\r\n        const { fallbackIndex } = this.state;\r\n        if (fallbackImages && fallbackIndex < fallbackImages.length) {\r\n            this.fetchImage(fallbackImages[fallbackIndex]);\r\n            this.setState({ fallbackIndex: fallbackIndex + 1 });\r\n        } else {\r\n            this.clearEvents();\r\n            this.setState({ loading: false, failed: true });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Load image on tag html\r\n     * @param {*} src for image\r\n     * @param {*} changeState \r\n     */\r\n    fetchImage(src, changeState) {\r\n        if (src === null || src === undefined || src.trim() === '') {\r\n            this.image = null;\r\n            if (changeState == null || changeState == undefined || changeState) {\r\n                this.setState({ loading: false, failed: false })\r\n            }\r\n        } else {\r\n            this.image = new Image();\r\n            this.image.addEventListener('load', this.onLoad);\r\n            this.image.addEventListener('error', this.onError);\r\n            this.image.src = src;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Default render component\r\n     */\r\n    defaultRender() {\r\n        const { className, loader } = this.props;\r\n        const { loading } = this.state;\r\n\r\n        // TODO for the moment is not necesary\r\n        //this.fetchImage(this.props.src, false);\r\n\r\n        if (loading) {\r\n            return loader ? <span>{loader}</span> : null;\r\n        } else {\r\n            if (this.props.src === null || this.props.src === undefined || this.props.src === null || this.props.src === undefined || this.props.src.trim() === '') {\r\n                return <div className={className || 'BackgroundComponent'}></div>;\r\n            } else {\r\n                return (\r\n                    <div className={className || 'BackgroundComponent'}>\r\n                        <img src={`${this.props.src}`} className=\"BackgroundComponentImage\" />\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nBackgroundComponent.propTypes = {\r\n    fallbackImages: PropTypes.array,\r\n    loader: PropTypes.object,\r\n    className: PropTypes.string,\r\n    src: PropTypes.string\r\n}\r\n\r\nexport default BackgroundComponent;","\r\nconst RF_USER_KEY_SESSION_STORAGE = \"rfPrincipal\";\r\n\r\n/**\r\n * Class to store data for user session\r\n */\r\nexport default class RFUserSession {\r\n    constructor() {\r\n        this.id = null;\r\n        this.token = null;\r\n        this.nick = null;\r\n        this.permisions = {};\r\n        this.modules = {};\r\n    }\r\n}\r\n\r\n/**\r\n * Class to contains idUrl and list roles for permisions to access data\r\n */\r\nexport class RFUserPermision {\r\n    constructor() {\r\n        this.idUrl = null;\r\n        this.roles = [];\r\n    }\r\n}\r\n\r\n/**\r\n * Class to contains modules for user\r\n */\r\nexport class RFUserModule {\r\n    constructor() {\r\n        this.moduleName = null;\r\n    }\r\n}\r\n\r\n/**\r\n * Method to know user is logged in application\r\n */\r\nexport function isUserLogged() {\r\n    let userLogged = getUserLogged();\r\n    return userLogged != null && userLogged != undefined && userLogged.nick != undefined && userLogged.nick != undefined != null && userLogged.nick.trim() !== '';\r\n}\r\n\r\n/**\r\n * Mhetod to get user logged\r\n */\r\nexport function getUserLogged() {\r\n    let userLogged = null;\r\n    let data = sessionStorage.getItem(RF_USER_KEY_SESSION_STORAGE);\r\n    if (data != null && data != undefined) {\r\n        userLogged = Object.assign(new RFUserSession(), JSON.parse(data));\r\n    }\r\n    return userLogged;\r\n}\r\n\r\n\r\n/**\r\n * Mhetod to set user logged\r\n */\r\nexport function setUserLogged(userLogged) {\r\n    if (userLogged != null && userLogged != undefined && userLogged.nick != undefined && userLogged.nick != undefined != null && userLogged.nick.trim() !== '') {\r\n        sessionStorage.setItem(RF_USER_KEY_SESSION_STORAGE, JSON.stringify(userLogged));\r\n    } else {\r\n        sessionStorage.setItem(RF_USER_KEY_SESSION_STORAGE, null);\r\n    }\r\n}","import React from 'react';\r\nimport BaseComponent from '../baseComponent';\r\nimport RFContext from '../../context';\r\nimport './index.css';\r\nimport RFUserSession, { setUserLogged } from '../../session';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Base class for login application\r\n */\r\nexport default class BaseLogin extends BaseComponent {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.loginClick = this.loginClick.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Method produces when click button for loggin \r\n     */\r\n    async loginClick() {\r\n        let nickValue = document.getElementById(\"nick\").value;\r\n        let passwordValue = document.getElementById(\"password\").value;\r\n        let usserLogedReturn = null;\r\n        if (nickValue != null && nickValue != undefined && passwordValue != null && passwordValue != undefined) {\r\n            if (this.props.app.props.serviceLogin != null && this.props.app.props.serviceLogin != undefined) {\r\n                usserLogedReturn = await this.props.app.props.serviceLogin.login(nickValue, passwordValue);\r\n            }\r\n            if (usserLogedReturn != null && usserLogedReturn != undefined) {\r\n                this.props.app.props.serviceLogin.setUserLogged(usserLogedReturn);\r\n                this.props.app.setState({ changed: true });\r\n            }\r\n        }\r\n    }\r\n\r\n    defaultRender() {\r\n        return (\r\n            <div className=\"Login\">\r\n                <div className=\"LoginPage\">\r\n                    <div className=\"LoginPanel\">\r\n                        <input id=\"nick\" type=\"text\" placeholder={RFContext.i18n.__(\"rf.login.username\")}></input>\r\n                        <input id=\"password\" type=\"password\" placeholder={RFContext.i18n.__(\"rf.login.password\")}></input>\r\n                        <button type=\"button\" onClick={this.loginClick}>{RFContext.i18n.__(\"rf.login.login\")}</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nBaseLogin.propTypes = {\r\n    app: PropTypes.object\r\n}\r\n\r\n","import './index.css';\r\nimport BaseComponent from '../base/baseComponent';\r\nimport PropTypes from 'prop-types';\r\nimport ReactDOM from 'react-dom';\r\nimport React from 'react';\r\n/**\r\n * Base class for tooltip\r\n */\r\nexport default class ToolTipComponent extends BaseComponent {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        let idParent = null;\r\n        let findById = true;\r\n        let parent = null;\r\n\r\n        if (this.props.for != null && this.props.for != undefined) {\r\n            idParent = this.props.for;\r\n        } else {\r\n            let parentNode = ReactDOM.findDOMNode(this);\r\n\r\n            if (parentNode != null && parentNode != undefined) {\r\n                try {\r\n                    findById = false;\r\n                    parent = parentNode.parentNode;\r\n                    idParent = true;\r\n                } catch (ex) {\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        if (idParent != null && idParent != undefined) {\r\n\r\n            if (findById) {\r\n                parent = document.getElementById(idParent);\r\n            }\r\n\r\n            let value = this.props.value;\r\n\r\n            if (parent != null && parent != undefined) {\r\n\r\n                parent.onmouseover = function (event) {\r\n                    let toolTipContainer = document.getElementById(\"tooltipcontainer\");\r\n                    if (toolTipContainer == null || toolTipContainer == undefined) {\r\n                        toolTipContainer = document.createElement(\"DIV\");\r\n                        toolTipContainer.classList.add('ToolTipComponentContainer');\r\n                        toolTipContainer.style.display = 'none';\r\n                        toolTipContainer.id = \"tooltipcontainer\";\r\n                        document.body.appendChild(toolTipContainer);\r\n                    }\r\n\r\n                    toolTipContainer.innerText = value;\r\n\r\n                    toolTipContainer.style.left = parent.offsetLeft + \"px\";\r\n                    toolTipContainer.style.top = (parent.offsetTop + parent.offsetHeight + 5) + \"px\";\r\n                    toolTipContainer.style.display = 'block';\r\n\r\n                    if(toolTipContainer.offsetLeft + toolTipContainer.offsetWidth > document.body.offsetWidth){\r\n                        toolTipContainer.style.left = (document.body.offsetWidth - toolTipContainer.offsetWidth)+\"px\";\r\n                    }\r\n\r\n\r\n                };\r\n\r\n                parent.onmouseout = function (event) {\r\n                    let toolTipContainer = document.getElementById(\"tooltipcontainer\");\r\n                    if (toolTipContainer != null && toolTipContainer != undefined) {\r\n                        toolTipContainer.innerText = '';\r\n                        toolTipContainer.style.display = 'none';\r\n                    }\r\n                };\r\n            }\r\n        }\r\n    }\r\n\r\n    defaultRender() {\r\n        return <span className=\"ToolTipComponent\"></span>;\r\n    }\r\n\r\n}\r\n\r\nToolTipComponent.propTypes = {\r\n    for: PropTypes.string,\r\n    value: PropTypes.string\r\n}","import React from 'react';\r\nimport './index.css';\r\nimport BaseComponent from '../base/baseComponent';\r\nimport PropTypes from 'prop-types';\r\nimport { setUserLogged } from '../session';\r\nimport ToolTipComponent from '../tooltip';\r\nimport RFContext from '../context';\r\n\r\n/**\r\n * Base class for menu for modules application\r\n */\r\nexport default class HeaderComponent extends BaseComponent {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.logoutClick = this.logoutClick.bind(this);\r\n        this.showHideMenu = this.showHideMenu.bind(this);\r\n        this.closeTabs = this.closeTabs.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Method to logout app\r\n     */\r\n    logoutClick() {\r\n        setUserLogged(null);\r\n        this.props.app.setState({ changed: true });\r\n    }\r\n\r\n    /**\r\n     * Mhetod to show hide menu\r\n     */\r\n    showHideMenu() {\r\n        let menuComponent = document.getElementsByClassName(\"MenuComponent\");\r\n        let bodyComponent = document.getElementsByClassName(\"BodyComponent\");\r\n\r\n        if (bodyComponent != null && bodyComponent != undefined && bodyComponent.length > 0) {\r\n            bodyComponent = bodyComponent[0];\r\n        }\r\n\r\n        if (menuComponent != null && menuComponent != undefined && menuComponent.length > 0) {\r\n            menuComponent = menuComponent[0];\r\n            if (menuComponent.style.display == null || menuComponent.style.display == undefined || menuComponent.style.display.trim() === '' || menuComponent.style.display === 'block') {\r\n                menuComponent.style.display = 'none';\r\n                if (bodyComponent != null && bodyComponent != undefined) {\r\n                    bodyComponent.classList.add(\"BodyComponentMenuHide\");\r\n                }\r\n            } else {\r\n                menuComponent.style.display = 'block';\r\n                if (bodyComponent != null && bodyComponent != undefined) {\r\n                    bodyComponent.classList.remove(\"BodyComponentMenuHide\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    defaultRender() {\r\n\r\n        let dataHeaderMenu = null;\r\n\r\n        if (this.props.headerMenuTemplateFn != null && this.props.headerMenuTemplateFn != undefined) {\r\n            dataHeaderMenu = this.props.headerMenuTemplateFn(this);\r\n        }\r\n\r\n        let data = (\r\n            <div className=\"HeaderComponent\">\r\n                <div className=\"HeaderMenu\">\r\n                    <button className=\"btnLogout btnHamburger fas fa-bars\" onClick={this.showHideMenu}>\r\n                        <ToolTipComponent value={RFContext.i18n.__(\"rf.header.menu\")} />\r\n                    </button>\r\n                    {dataHeaderMenu}\r\n                    {this.renderButtonCloseTabs()}\r\n                </div>\r\n                <div className=\"HeaderLogout\">\r\n                    <button className=\"btnLogout fas fa-power-off\" onClick={this.logoutClick}>\r\n                        <ToolTipComponent value={RFContext.i18n.__(\"rf.header.logouttooltip\")} />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        return data;\r\n    }\r\n\r\n    renderButtonCloseTabs() {\r\n        return (\r\n            <button className=\"btnLogout fas fa-trash\" onClick={this.closeTabs}>\r\n                <ToolTipComponent value={RFContext.i18n.__(\"rf.header.closeTabs\")} />\r\n            </button>\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Method for close tabs \r\n     */\r\n    closeTabs(){\r\n        if(this.props.app.tabViewComponent != null && this.props.app.tabViewComponent != undefined){\r\n            this.props.app.tabViewComponent.closeAllTabs();\r\n        }\r\n    }\r\n\r\n}\r\n\r\nHeaderComponent.propTypes = {\r\n    app: PropTypes.object,\r\n    headerMenuTemplateFn: PropTypes.func\r\n}","import React from 'react';\r\nimport './index.css';\r\nimport BaseComponent from '../base/baseComponent';\r\nimport PropTypes from 'prop-types';\r\n/**\r\n * Base class for menu for modules application\r\n */\r\nexport default class MenuComponent extends BaseComponent {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    defaultRender() {\r\n\r\n        let dataMenu = null;\r\n\r\n        if (this.props.menuContentTemplateFn != null && this.props.menuContentTemplateFn != undefined) {\r\n            dataMenu = this.props.menuContentTemplateFn(this);\r\n        }\r\n\r\n        let data = (\r\n            <div className=\"MenuComponent\">\r\n                {dataMenu}\r\n            </div>\r\n        );\r\n\r\n        return data;\r\n    }\r\n\r\n    /**\r\n    * Method to click open menu level 1\r\n    * @param {*} id \r\n    */\r\n    onMenuClickLevel1(id, idParent, title, componentView) {\r\n\r\n        let element = document.getElementById(id);\r\n        let elementParent = document.getElementById(idParent);\r\n        let menuActive = document.querySelectorAll(\".MenuActive\");\r\n\r\n        if (menuActive != null && menuActive != undefined) {\r\n            for (var i = 0; i < menuActive.length; i++) {\r\n                menuActive[i].classList.remove(\"MenuActive\");\r\n            }\r\n        }\r\n        element.classList.add(\"MenuActive\");\r\n        elementParent.classList.add(\"MenuActive\");\r\n        let icon = elementParent.getElementsByClassName(\"MenuItemLevelIcon0\")[0];\r\n        icon.classList.remove(\"fa-caret-right\");\r\n        icon.classList.add(\"fa-caret-down\");\r\n        this.props.app.tabViewComponent.addTab(title, componentView);\r\n    }\r\n\r\n    /**\r\n    * Method to click open menu level 0\r\n    * @param {*} id \r\n    */\r\n    onMenuClickLevel0(id) {\r\n\r\n        let element = document.getElementById(id);\r\n\r\n        let menuActive = document.querySelectorAll(\".MenuActive\");\r\n        if (menuActive != null && menuActive != undefined) {\r\n            for (var i = 0; i < menuActive.length; i++) {\r\n                if (menuActive[i].id != id) {\r\n                    menuActive[i].classList.remove(\"MenuActive\");\r\n                }\r\n            }\r\n        }\r\n\r\n        if (element.classList.contains(\"MenuActive\")) {\r\n            element.classList.remove(\"MenuActive\");\r\n            let icon = element.getElementsByClassName(\"MenuItemLevelIcon0\")[0];\r\n            icon.classList.remove(\"fa-caret-down\");\r\n            icon.classList.add(\"fa-caret-right\");\r\n        } else {\r\n            element.classList.add(\"MenuActive\");\r\n            let icon = element.getElementsByClassName(\"MenuItemLevelIcon0\")[0];\r\n            icon.classList.remove(\"fa-caret-right\");\r\n            icon.classList.add(\"fa-caret-down\");\r\n        }\r\n    }\r\n\r\n}\r\n\r\nMenuComponent.propTypes = {\r\n    app: PropTypes.object,\r\n    menuContentTemplateFn: PropTypes.func\r\n}","import React from 'react';\r\nimport './index.css';\r\nimport PropTypes from 'prop-types';\r\nimport BaseComponent from '../base/baseComponent';\r\n\r\n/**\r\n * Base class for dashboard\r\n */\r\nexport default class DashboardComponent extends BaseComponent {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    defaultRender() {\r\n        return (\r\n            <div className=\"DashboardComponent\" id=\"Dashboard\">\r\n                {this.props.header != null && this.props.header != undefined ? this.props.header : null}\r\n                {this.props.menu != null && this.props.menu != undefined ? this.props.menu : null}\r\n                {this.props.body != null && this.props.body != undefined ? this.props.body : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDashboardComponent.propTypes = {\r\n    menu: PropTypes.object,\r\n    header: PropTypes.object,\r\n    body: PropTypes.object,\r\n    app: PropTypes.object\r\n}","import './index.css';\r\nimport React, { Component } from 'react';\r\n\r\n/**\r\n * HourglassSpinnerComponent\r\n */\r\nexport default class HourglassSpinnerComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"fullDivSpinnerhourglass\">\r\n                <div className=\"fullDivSpinnerhourglassContainer\">\r\n                    <div className=\"lds-hourglass\"></div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import \"./index.css\";\r\nimport BaseComponent from \"../base/baseComponent\";\r\nimport PropTypes from \"prop-types\";\r\nimport ReactDOM from \"react-dom\";\r\nimport React, { Suspense } from \"react\";\r\nimport RFContext from \"../context\";\r\nimport ErrorHandlerComponent from \"rfreactlib/error\";\r\nimport HourglassSpinnerComponent from \"rfreactlib/spinners/hourglass\";\r\n\r\n/**\r\n * Default class for manage data for tab\r\n */\r\nexport class Tab {\r\n  constructor() {\r\n    this.index = 0;\r\n    this.title = \"Not found\";\r\n    this.componentView = null;\r\n    this.componentViewRender = null;\r\n    this.key = this.uniqueID();\r\n  }\r\n\r\n  uniqueID() {\r\n    return (\r\n      this.chr4() +\r\n      this.chr4() +\r\n      \"-\" +\r\n      this.chr4() +\r\n      \"-\" +\r\n      this.chr4() +\r\n      \"-\" +\r\n      this.chr4() +\r\n      \"-\" +\r\n      this.chr4() +\r\n      this.chr4() +\r\n      this.chr4()\r\n    );\r\n  }\r\n\r\n  chr4() {\r\n    return Math.random().toString(16).slice(-4);\r\n  }\r\n}\r\n\r\n/**\r\n * Class container tab view hedaers\r\n */\r\nexport class TabViewHeaderComponent extends BaseComponent {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  defaultStateProps() {\r\n    return {\r\n      changed: false,\r\n    };\r\n  }\r\n\r\n  renderElement() {\r\n    let tabs = [];\r\n\r\n    for (\r\n      var i = 0;\r\n      i < this.props.tabViewComponent.props.app.tabs.length;\r\n      i++\r\n    ) {\r\n      tabs.push(\r\n        <TabViewHeaderItemComponent\r\n          tabHeaderComponent={this}\r\n          key={this.props.tabViewComponent.props.app.tabs[i].key}\r\n          tab={this.props.tabViewComponent.props.app.tabs[i]}\r\n          first={i == 0 ? true : false}\r\n        />\r\n      );\r\n    }\r\n\r\n    return <div className=\"TabViewHeaderComponent\">{tabs}</div>;\r\n  }\r\n\r\n  defaultRender() {\r\n    return this.renderElement();\r\n  }\r\n}\r\n\r\nTabViewHeaderComponent.propTypes = {\r\n  tabViewComponent: PropTypes.object,\r\n};\r\n\r\n/**\r\n * Tab view header child for select and close tab\r\n */\r\nexport class TabViewHeaderItemComponent extends BaseComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onClickTitle = this.onClickTitle.bind(this);\r\n    this.onClickClose = this.onClickClose.bind(this);\r\n  }\r\n\r\n  defaultStateProps() {\r\n    return {\r\n      changed: false,\r\n    };\r\n  }\r\n\r\n  onClickTitle(event) {\r\n    this.props.tabHeaderComponent.props.tabViewComponent.changeTab(\r\n      this.props.tab\r\n    );\r\n  }\r\n\r\n  onClickClose(event) {\r\n    this.props.tabHeaderComponent.props.tabViewComponent.closeTab(\r\n      this.props.tab\r\n    );\r\n  }\r\n\r\n  renderElement() {\r\n    let active =\r\n      this.props.tabHeaderComponent.props.tabViewComponent.props.app.other[\r\n        \"activetab\"\r\n      ] == this.props.tab.index;\r\n    return (\r\n      <div\r\n        className={\r\n          (this.props.first ? \"TabViewHeaderItemComponentFirst\" : \"\") +\r\n          \" TabViewHeaderItemComponent\" +\r\n          (active ? \" TabViewHeaderItemComponentActive\" : \"\")\r\n        }\r\n        id={\"tabHeader\" + this.props.tab.index}\r\n      >\r\n        <div\r\n          className=\"TabViewHeaderItemComponentTitle\"\r\n          onClick={this.onClickTitle}\r\n        >\r\n          {this.props.tab.title}\r\n        </div>\r\n        <div\r\n          className=\"TabViewHeaderItemComponentClose\"\r\n          onClick={this.onClickClose}\r\n        >\r\n          <i className=\"far fa-times-circle\"></i>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  defaultRender() {\r\n    return this.renderElement();\r\n  }\r\n}\r\n\r\nTabViewHeaderItemComponent.propTypes = {\r\n  tabViewComponent: PropTypes.object,\r\n  tab: PropTypes.object,\r\n  first: PropTypes.bool,\r\n};\r\n\r\nTabViewHeaderItemComponent.defaultProps = {\r\n  first: false,\r\n};\r\n\r\n/**\r\n * Component for store body off tabs\r\n */\r\nexport class TabViewBodyComponent extends BaseComponent {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  defaultStateProps() {\r\n    return {\r\n      changed: false,\r\n    };\r\n  }\r\n\r\n  renderElement() {\r\n    let tabs = [];\r\n\r\n    for (\r\n      var i = 0;\r\n      i < this.props.tabViewComponent.props.app.tabs.length;\r\n      i++\r\n    ) {\r\n      tabs.push(\r\n        <TabViewBodyItemComponent\r\n          tabBodyComponent={this}\r\n          renderWithoutIframe={true}\r\n          key={this.props.tabViewComponent.props.app.tabs[i].key}\r\n          tab={this.props.tabViewComponent.props.app.tabs[i]}\r\n        />\r\n      );\r\n    }\r\n\r\n    return <div className=\"TabViewBodyComponent\">{tabs}</div>;\r\n  }\r\n\r\n  defaultRender() {\r\n    return this.renderElement();\r\n  }\r\n}\r\n\r\nTabViewBodyComponent.propTypes = {\r\n  tabViewComponent: PropTypes.object,\r\n  tabs: PropTypes.array,\r\n};\r\n\r\nTabViewBodyComponent.defaultProps = {\r\n  tabs: [],\r\n};\r\n\r\nconst renderLoaderTab = () => <HourglassSpinnerComponent />;\r\n\r\n/**\r\n * Component for store body of one tab\r\n */\r\nexport class TabViewBodyItemComponent extends BaseComponent {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  defaultStateProps() {\r\n    return {\r\n      changed: false,\r\n    };\r\n  }\r\n\r\n  renderElement() {\r\n    let active =\r\n      this.props.tabBodyComponent.props.tabViewComponent.props.app.other[\r\n        \"activetab\"\r\n      ] == this.props.tab.index;\r\n\r\n    if (this.props.tab.componentViewRender == null) {\r\n      // This code draw data for component without iframe\r\n      if (this.props.renderWithoutIframe) {\r\n        this.props.tab.componentViewRender = RFContext.contextResolver.renderComponent(\r\n          this.props.tab.componentView,\r\n          this.props.tab\r\n        );\r\n      } else {\r\n        const jsonTab = JSON.stringify(this.props.tab);\r\n        this.props.tab.componentViewRender = (\r\n          <iframe\r\n            className=\"TabViewBodyItemComponentIFrame\"\r\n            src={\"/tabRoute/\" + jsonTab}\r\n          ></iframe>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Suspense fallback={renderLoaderTab()}>\r\n        <ErrorHandlerComponent>\r\n          <div\r\n            className={\r\n              \"TabViewBodyItemComponent\" +\r\n              (active ? \" TabViewBodyItemComponentActive\" : \"\")\r\n            }\r\n            id={\"tabBody\" + this.props.tab.index}\r\n          >\r\n            {this.props.tab.componentViewRender}\r\n            <div\r\n              className=\"MessagesComponent\"\r\n              id={\"messages\" + this.props.tab.index}\r\n            ></div>\r\n            <div\r\n              className=\"TabViewBodyItemComponentModals\"\r\n              id={\"modals\" + this.props.tab.index}\r\n            ></div>\r\n          </div>\r\n        </ErrorHandlerComponent>\r\n      </Suspense>\r\n    );\r\n  }\r\n\r\n  defaultRender() {\r\n    return this.renderElement();\r\n  }\r\n}\r\n\r\nTabViewBodyItemComponent.propTypes = {\r\n  tabViewComponent: PropTypes.object,\r\n  tab: PropTypes.object,\r\n  tabBodyComponent: PropTypes.object,\r\n  renderWithoutIframe: PropTypes.bool,\r\n};\r\n\r\n/**\r\n * Component for store data for tabs, headers and body for all tabs\r\n */\r\nexport default class TabViewComponent extends BaseComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.props.app.tabViewComponent = this;\r\n  }\r\n\r\n  defaultStateProps() {\r\n    return {\r\n      changed: false,\r\n    };\r\n  }\r\n\r\n  addTab(title, componentView) {\r\n    let index = this.props.app.tabs.length;\r\n    let tab = new Tab();\r\n    tab.index = index;\r\n    tab.title = title;\r\n    tab.componentView = componentView;\r\n    this.props.app.tabs.push(tab);\r\n    this.props.app.other[\"activetab\"] = index;\r\n    this.changeState();\r\n  }\r\n\r\n  changeTab(tab) {\r\n    this.props.app.other[\"activetab\"] = tab.index;\r\n    this.changeState();\r\n  }\r\n\r\n  closeTab(tab) {\r\n    let activeTab = this.props.app.other[\"activetab\"];\r\n    let index = tab.index;\r\n    this.props.app.tabs.splice(index, 1);\r\n    let numTabs = this.props.app.tabs.length - 1;\r\n    if (numTabs < 0) {\r\n      this.props.app.other[\"activetab\"] = -1;\r\n    } else {\r\n      if (index == activeTab) {\r\n        index = index - 1;\r\n      } else if (activeTab > index) {\r\n        index = activeTab - 1;\r\n      } else {\r\n        index = activeTab;\r\n      }\r\n\r\n      if (index > numTabs) {\r\n        index = numTabs - 1;\r\n      }\r\n\r\n      if (index < 0) {\r\n        index = 0;\r\n      }\r\n\r\n      this.props.app.other[\"activetab\"] = index;\r\n    }\r\n\r\n    this.renumerateTabs();\r\n    this.changeState();\r\n  }\r\n\r\n  closeAllTabs() {\r\n    this.props.app.tabs = [];\r\n    this.props.app.other[\"activetab\"] = -1;\r\n    this.changeState();\r\n  }\r\n\r\n  renumerateTabs() {\r\n    for (var i = 0; i < this.props.app.tabs.length; i++) {\r\n      this.props.app.tabs[i].index = i;\r\n    }\r\n  }\r\n\r\n  renderHeader() {\r\n    let renderValue = null;\r\n    renderValue = <TabViewHeaderComponent tabViewComponent={this} />;\r\n    return renderValue;\r\n  }\r\n\r\n  renderBody() {\r\n    let renderValue = null;\r\n    renderValue = <TabViewBodyComponent tabViewComponent={this} />;\r\n    return renderValue;\r\n  }\r\n\r\n  renderElement() {\r\n    let renderValue = null;\r\n\r\n    if (this.props.app.tabs.length > 0) {\r\n      let headerComponent = this.renderHeader();\r\n      let bodyComponent = this.renderBody();\r\n\r\n      renderValue = (\r\n        <div className=\"TabViewComponent\">\r\n          {headerComponent}\r\n          {bodyComponent}\r\n        </div>\r\n      );\r\n    } else {\r\n      renderValue = <div className=\"TabViewComponent\"></div>;\r\n    }\r\n\r\n    return renderValue;\r\n  }\r\n\r\n  defaultRender() {\r\n    return this.renderElement();\r\n  }\r\n\r\n  changeState() {\r\n    this.setState({ changed: true });\r\n  }\r\n\r\n  changeStateApp() {\r\n    this.props.app.changeState();\r\n  }\r\n}\r\n\r\nTabViewComponent.propTypes = {};\r\n\r\nTabViewComponent.defaultProps = {};\r\n","import React from 'react';\r\nimport './index.css';\r\nimport BaseComponent from '../base/baseComponent';\r\nimport PropTypes from 'prop-types';\r\nimport TabViewComponent from '../tabView';\r\n\r\n/**\r\n * Base class for body for modules application\r\n */\r\nexport default class BodyComponent extends BaseComponent {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        \r\n    }\r\n\r\n    /**\r\n     * Method for render tabview for body\r\n     */\r\n    renderTabView(){\r\n        return (<TabViewComponent app={this.props.app}/>)\r\n    }\r\n\r\n    defaultRender(){\r\n\r\n        let data = (\r\n            <div className=\"BodyComponent\">\r\n                {this.renderTabView()}\r\n            </div>\r\n        );\r\n        \r\n        return data;\r\n    }\r\n\r\n}\r\n\r\nBodyComponent.propTypes = {\r\n    app: PropTypes.object\r\n}","import HourglassSpinnerComponent from \"rfreactlib/spinners/hourglass\";\r\nimport ReactDOM from \"react-dom\";\r\nimport React from \"react\";\r\nimport RFContext from \"rfreactlib/context\";\r\nimport UtilsCommons from \"rfreactlib/utils/UtilsCommons\";\r\nimport UtilsString from \"rfreactlib/utils/UtilsString\";\r\n\r\n/**\r\n * Default class for dom operations\r\n */\r\nexport default class Dom {\r\n  constructor() {\r\n    this.zIndex = 10;\r\n  }\r\n\r\n  /**\r\n   * Method to get zindex and increment one\r\n   */\r\n  getUpdatedZIndex() {\r\n    return this.zIndex++;\r\n  }\r\n\r\n  /**\r\n   * Method to get zindex and increment one an cast to str\r\n   */\r\n  getUpdatedZIndexStr() {\r\n    return \"\" + this.getUpdatedZIndex();\r\n  }\r\n\r\n  /**\r\n   * Method to generate unique id\r\n   */\r\n  randomId() {\r\n    return Math.random().toString(36).slice(2);\r\n  }\r\n\r\n  /**\r\n   * Method for generate unique id\r\n   */\r\n  uniqueID() {\r\n    return UtilsString.uniqueId();\r\n  }\r\n\r\n  chr4() {\r\n    return Math.random().toString(16).slice(-4);\r\n  }\r\n\r\n  /**\r\n   * Method for hide tooltip\r\n   */\r\n  hideToolTip() {\r\n    let toolTipContainer = document.getElementById(\"tooltipcontainer\");\r\n\r\n    if (toolTipContainer != null && toolTipContainer != undefined) {\r\n      toolTipContainer.innerText = \"\";\r\n      toolTipContainer.style.display = \"none\";\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method for show wait status\r\n   * @param {*} tab\r\n   */\r\n  showWaitStatus(tab) {\r\n    if (UtilsCommons.isNotNull(tab)) {\r\n      let spinnerDiv = document.getElementById(\"spinnerDiv\" + tab.index);\r\n      if (spinnerDiv == null || spinnerDiv == undefined) {\r\n        let span = document.createElement(\"span\");\r\n        span.id = \"spinnerDiv\" + tab.index;\r\n        document.getElementById(\"tabBody\" + tab.index).appendChild(span);\r\n      }\r\n      ReactDOM.render(\r\n        <HourglassSpinnerComponent />,\r\n        document.getElementById(\"spinnerDiv\" + tab.index)\r\n      );\r\n    } else {\r\n      let spinnerDiv = document.getElementById(\"spinneDiv\");\r\n      if (spinnerDiv == null || spinnerDiv == undefined) {\r\n        let span = document.createElement(\"span\");\r\n        span.id = \"spinnerDiv\";\r\n        document.body.appendChild(span);\r\n      }\r\n      ReactDOM.render(<HourglassSpinnerComponent />, document.body);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method for hide wait status\r\n   * @param {*} tab\r\n   */\r\n  hideWaitStatus(tab) {\r\n    let spinner = null;\r\n\r\n    if (UtilsCommons.isNotNull(tab)) {\r\n      spinner = document.getElementById(\"spinnerDiv\" + tab.index);\r\n    } else {\r\n      spinner = document.getElementById(\"spinnerDiv\");\r\n    }\r\n\r\n    if (UtilsCommons.isNotNull(spinner)) {\r\n      spinner.parentElement.removeChild(spinner);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method for add message\r\n   * @param {*} tab\r\n   * @param {*} message\r\n   * @param {*} level\r\n   */\r\n  addMessage(tab, message, level) {\r\n    let messages = null;\r\n    if (UtilsCommons.isNotNull(tab)) {\r\n      messages = document.getElementById(\"messages\" + tab.index);\r\n    } else {\r\n      messages = document.getElementById(\"messages\");\r\n      if (messages == null || messages == undefined) {\r\n        messages = document.createElement(\"messages\");\r\n        messages.id = \"messages\";\r\n        messages.classList.add(\"MessagesComponent\");\r\n        document.body.appendChild(messages);\r\n      }\r\n    }\r\n\r\n    let className = \"\";\r\n    if (level == \"SUCCES\") {\r\n      className = \"MessagesSucces\";\r\n    } else if (level == \"INFO\") {\r\n      className = \"MessagesInfo\";\r\n    } else if (level == \"WARNING\") {\r\n      className = \"MessagesWarning\";\r\n    } else if (level == \"ERROR\") {\r\n      className = \"MessagesError\";\r\n    }\r\n\r\n    let id = this.uniqueID();\r\n\r\n    let messagesToast = document.createElement(\"DIV\");\r\n    messagesToast.classList.add(\"Messages\");\r\n    messagesToast.classList.add(className);\r\n    messagesToast.style.zIndex = this.getUpdatedZIndexStr();\r\n    messagesToast.id = id;\r\n\r\n    let messagesToastIcon = document.createElement(\"DIV\");\r\n    messagesToastIcon.classList.add(\"MessagesIcon\");\r\n\r\n    let messagesToastIconClose = document.createElement(\"DIV\");\r\n    messagesToastIconClose.classList.add(\"MessagesIconClose\");\r\n    messagesToastIconClose.innerHTML =\r\n      '<button class=\"MessagesIconClose\" onClick=\"' +\r\n      this.closeMessageToast(id) +\r\n      '\" ><i class=\"fas fa-times\"></i></button>';\r\n    messagesToastIcon.appendChild(messagesToastIconClose);\r\n\r\n    messagesToast.appendChild(messagesToastIcon);\r\n\r\n    let messagesToastTitle = document.createElement(\"DIV\");\r\n    messagesToastTitle.classList.add(\"MessagesTitle\");\r\n\r\n    let messagesToastTitleContent = document.createElement(\"DIV\");\r\n    messagesToastTitleContent.classList.add(\"MessagesTitleContent\");\r\n    messagesToastTitleContent.innerText = message;\r\n    messagesToastTitle.appendChild(messagesToastTitleContent);\r\n\r\n    messagesToast.appendChild(messagesToastTitle);\r\n\r\n    messages.appendChild(messagesToast);\r\n\r\n    // Remove div with timeout funcion\r\n    setTimeout(function () {\r\n      closeMessage(id);\r\n    }, 15000);\r\n  }\r\n\r\n  /**\r\n   * Method for close message\r\n   * @param {*} id\r\n   */\r\n  closeMessageToast(id) {\r\n    return (\r\n      \"let messagesToast = document.getElementById('\" +\r\n      id +\r\n      \"');\" +\r\n      \"if (messagesToast != null && messagesToast != undefined) {\" +\r\n      \"messagesToast.parentElement.removeChild(messagesToast);\" +\r\n      \"}\"\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Function to close message\r\n * @param {*} id\r\n */\r\nexport function closeMessage(id) {\r\n  let messagesToast = document.getElementById(id);\r\n  if (UtilsCommons.isNotNull(messagesToast)) {\r\n    messagesToast.parentElement.removeChild(messagesToast);\r\n  }\r\n}\r\n\r\n/**\r\n * Function to handle resize window event\r\n */\r\nexport function resizeWindowEvent() {}\r\n","import BaseComponent from \"../baseComponent\";\r\nimport ErrorHandlerComponent from \"../../error\";\r\nimport \"./index.css\";\r\nimport StyleComponent, { ConfigStyleApp } from \"../../style\";\r\nimport BackgroundComponent from \"../../background\";\r\nimport React from \"react\";\r\nimport RFUserSession, {\r\n  isUserLogged,\r\n  getUserLogged,\r\n  setUserLogged,\r\n} from \"../../session\";\r\nimport BaseLogin from \"../baseLogin/\";\r\nimport HeaderComponent from \"../../header\";\r\nimport MenuComponent from \"../../menu\";\r\nimport DashboardComponent from \"../../dashboard\";\r\nimport BodyComponent from \"../../body\";\r\nimport PropTypes from \"prop-types\";\r\nimport RFContext from \"rfreactlib/context\";\r\nimport fetchIntercept from \"fetch-intercept\";\r\nimport { resizeWindowEvent } from \"rfreactlib/dom\";\r\n\r\n/**\r\n * Base class for application\r\n */\r\nexport default class BaseApp extends BaseComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.defaultStateProps();\r\n    this.tabViewComponent = null;\r\n    this.other = {};\r\n    this.other[\"activetab\"] = { activetab: -1 };\r\n    this.tabs = [];\r\n    this.fetchInterceptor = null;\r\n    this.configStyleApp = this.getConfigStyle();\r\n  }\r\n\r\n  /**\r\n   * Execute this before load data\r\n   */\r\n  beforeLoadData(){\r\n    this.loadConfigBaseApp();\r\n  }\r\n\r\n  /**\r\n   * Method for load config for app\r\n   */\r\n  loadConfigBaseApp(){\r\n\r\n  }\r\n\r\n  /**\r\n   * Method for render home application\r\n   */\r\n  renderHome() {\r\n    return (\r\n      <ErrorHandlerComponent>\r\n        {this.configStyleApp.renderStyle()}\r\n        <div className=\"BaseApp\">\r\n          <BackgroundComponent src={this.state.srcBackground} />\r\n          <StyleComponent />\r\n          <DashboardComponent\r\n            app={this}\r\n            menu={this.renderMenu()}\r\n            header={this.renderHeader()}\r\n            body={<BodyComponent app={this} />}\r\n          />\r\n          {this.defaultStyleOverrideApp()}\r\n        </div>\r\n      </ErrorHandlerComponent>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Set default props for app\r\n   */\r\n  defaultStateProps() {\r\n    return {\r\n      changed: false,\r\n      srcBackground: null,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Method for render logging for application\r\n   */\r\n  renderLogin() {\r\n    return <BaseLogin app={this} />;\r\n  }\r\n\r\n  /**\r\n   * Method for render header for application\r\n   */\r\n  renderHeader() {\r\n    return <HeaderComponent app={this} />;\r\n  }\r\n\r\n  /**\r\n   * Method for render menu for application\r\n   */\r\n  renderMenu() {\r\n    return <MenuComponent app={this} />;\r\n  }\r\n\r\n  /**\r\n   * Default render for application\r\n   */\r\n  defaultRender() {\r\n    this.registerFetchInterceptor();\r\n    this.defaultConfigDom();\r\n    return isUserLogged() ? this.renderHome() : this.renderLogin();\r\n  }\r\n\r\n  /**\r\n   * Method for change state app\r\n   */\r\n  changeState() {\r\n    this.setState({ changed: true });\r\n  }\r\n\r\n  /**\r\n   * Method for get config style for application\r\n   */\r\n  getConfigStyle() {\r\n    return new ConfigStyleApp();\r\n  }\r\n\r\n  /**\r\n   * Method to register fetch data\r\n   */\r\n  registerFetchInterceptor() {\r\n    if (this.fetchInterceptor == null) {\r\n      let app = this;\r\n      this.fetchInterceptor = fetchIntercept.register({\r\n        request: function (url, config) {\r\n          // Modify the url or config here\r\n          return [url, config];\r\n        },\r\n\r\n        requestError: function (error) {\r\n          // Called when an error occured during another 'request' interceptor call\r\n          return Promise.reject(error);\r\n        },\r\n\r\n        response: function (response) {\r\n          // Modify the reponse object\r\n          let usserLogged = getUserLogged();\r\n\r\n          if (\r\n            usserLogged != null &&\r\n            usserLogged != undefined &&\r\n            usserLogged.id != null &&\r\n            usserLogged != undefined\r\n          ) {\r\n            let token = response.headers.get(\"Authorization\");\r\n            if (token != null && token != undefined) {\r\n              token = token.replace(\"Bearer \", \"\");\r\n              usserLogged.token = token;\r\n              setUserLogged(usserLogged);\r\n            }\r\n          }\r\n\r\n          if (response.status == 401) {\r\n            (async () => {\r\n              const json = await response.json();\r\n              // Get state, if expired logout application\r\n              if (json != null && json != undefined && json == \"EXPIRED\") {\r\n                app.addMessageError(RFContext.i18n.__(\"rf.status.expired\"));\r\n                setUserLogged(new RFUserSession());\r\n                app.changeState();\r\n              } else {\r\n                app.addMessageError(RFContext.i18n.__(\"rf.status.noAuth\"));\r\n              }\r\n            })();\r\n          }\r\n          return response;\r\n        },\r\n\r\n        responseError: function (error) {\r\n          // Handle an fetch error\r\n          return Promise.reject(error);\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method to override the style for the app\r\n   */\r\n  defaultStyleOverrideApp() {\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Add default config dom\r\n   */\r\n  defaultConfigDom() {\r\n    window.addEventListener(\"resize\", resizeWindowEvent);\r\n  }\r\n\r\n  /**\r\n   * Method to chnage config for style app\r\n   */\r\n  changeConfigStyleApp() {\r\n    this.storeConfigStyleApp();\r\n    this.changeState();\r\n  }\r\n\r\n  /**\r\n   * Method to reset default style app\r\n   */\r\n  resetDefaulConfigStyleApp() {\r\n    this.configStyleApp = new ConfigStyleApp();\r\n    this.storeConfigStyleApp();\r\n  }\r\n\r\n  /**\r\n   * Method to store the style for example in database\r\n   */\r\n  async storeConfigStyleApp() {}\r\n}\r\n\r\n/**\r\n * Properties for base app\r\n */\r\nBaseApp.propTypes = {\r\n  /**\r\n   * Service for manage login into application\r\n   */\r\n  serviceLogin: PropTypes.object,\r\n};\r\n","import RFUserSession, { setUserLogged, getUserLogged } from \"../../session\";\r\n/**\r\n * Base class for al services\r\n */\r\nexport default class BaseService {\r\n  constructor(baseHost, pathService) {\r\n    this.baseHost = baseHost;\r\n    this.pathService = pathService;\r\n  }\r\n\r\n  /**\r\n   * Get host with path service\r\n   */\r\n  getRealPathHost() {\r\n    return this.baseHost + this.pathService;\r\n  }\r\n\r\n  /**\r\n   * Method to fech post service\r\n   * @param {*} url\r\n   * @param {*} bodyData\r\n   */\r\n  async fetchPostService(url, bodyData) {\r\n    let response = await this.getFetchRequest(url, bodyData);\r\n    let dataReturn = {};\r\n    let json = null;\r\n\r\n    if (response.ok && (response.status == 200 || response.status == 201)) {\r\n      let json = await response.json();\r\n      dataReturn = json.data;\r\n      // console.log(json.data);\r\n      // console.log(response.status);\r\n    } else {\r\n      json = \"Error\";\r\n      dataReturn = \"Error\";\r\n      try {\r\n        json = await response.json();\r\n        dataReturn = json.data;\r\n      } catch (ex) {}\r\n      throw new Error(dataReturn);\r\n    }\r\n    return dataReturn;\r\n  }\r\n\r\n  /**\r\n   * Method to get headers\r\n   */\r\n  getHeaders() {\r\n    let headers = new Headers();\r\n    let usserLogged = getUserLogged();\r\n\r\n    headers.append(\"Content-Type\", \"application/json\");\r\n    headers.append(\"Accept\", \"application/json\");\r\n\r\n    if (\r\n      usserLogged != null &&\r\n      usserLogged != undefined &&\r\n      usserLogged.id != null &&\r\n      usserLogged.id != undefined\r\n    ) {\r\n      headers.append(\"authorization\", \"Bearer \" + usserLogged.token);\r\n      //headers.append('x-access-token', \"Bearer \" + usserLogged.token);\r\n    }\r\n\r\n    return headers;\r\n  }\r\n\r\n  /**\r\n   * Method to get request\r\n   * @param {*} url\r\n   * @param {*} bodyData\r\n   */\r\n  getFetchRequest(url, bodyData) {\r\n    let options = {\r\n      method: \"POST\",\r\n      headers: this.getHeaders(),\r\n    };\r\n    if (bodyData != null && bodyData != undefined) {\r\n      options.body = bodyData;\r\n    }\r\n    let request = new Request(url, options);\r\n    return fetch(request);\r\n  }\r\n\r\n  /**\r\n   * Method for fetch post service without body data\r\n   * @param {*} url\r\n   */\r\n  async fetchPostServiceWithoutBody(url) {\r\n    let response = await this.getFetchRequest(url, null);\r\n    let dataReturn = {};\r\n    let json = null;\r\n\r\n    if (response.ok && (response.status == 200 || response.status == 201)) {\r\n      let json = await response.json();\r\n      dataReturn = json.data;\r\n      // console.log(json.data);\r\n      // console.log(response.status);\r\n    } else {\r\n      json = \"Error\";\r\n      dataReturn = \"Error\";\r\n      try {\r\n        json = await response.json();\r\n        dataReturn = json.data;\r\n      } catch (ex) {}\r\n      throw new Error(dataReturn);\r\n    }\r\n    return dataReturn;\r\n  }\r\n}\r\n\r\n/**\r\n * Default class for login service\r\n */\r\nexport class BaseLoginService extends BaseService {\r\n  constructor(baseHost, pahtLogin) {\r\n    super(baseHost, pahtLogin);\r\n    this.pahtLogin = pahtLogin;\r\n  }\r\n\r\n  /**\r\n   * Method to login in app\r\n   * @param {*} nickValue\r\n   * @param {*} passwordValue\r\n   */\r\n  async login(nickValue, passwordValue) {\r\n    let logginReturn = null;\r\n    if (\r\n      this.baseHost != null &&\r\n      this.baseHost != undefined &&\r\n      this.baseHost.trim() !== \"\" &&\r\n      this.pahtLogin != null &&\r\n      this.pahtLogin != undefined &&\r\n      this.pahtLogin.trim() !== \"\"\r\n    ) {\r\n      logginReturn = await this.fetchPostService(\r\n        this.getRealPathHost(),\r\n        JSON.stringify({\r\n          username: nickValue,\r\n          password: passwordValue,\r\n        })\r\n      );\r\n    }\r\n    return logginReturn;\r\n  }\r\n\r\n  /**\r\n   * Method  to set user logged\r\n   * @param {*} returnDataLogin\r\n   */\r\n  setUserLogged(returnDataLogin) {\r\n    let userLoggued = new RFUserSession();\r\n    userLoggued.id = returnDataLogin.id;\r\n    userLoggued.token = returnDataLogin.token;\r\n    userLoggued.nick = returnDataLogin.nick;\r\n    userLoggued.permisions = returnDataLogin.permisions;\r\n    userLoggued.modules = returnDataLogin.modules;\r\n    setUserLogged(userLoggued);\r\n  }\r\n}\r\n","import BaseService from \"../baseService\";\r\nimport UtilsError from \"../../utils/UtilsError\";\r\n/**\r\n * Base crud service\r\n */\r\nexport default class BaseCrudService extends BaseService {\r\n  constructor(baseHost, pathService) {\r\n    super(baseHost, pathService);\r\n    this.pathCount = \"/count\";\r\n    this.pathRead = \"/read\";\r\n    this.pathList = \"/list\";\r\n    this.pathLoadNew = \"/loadNew\";\r\n    this.pathAdd = \"/add\";\r\n    this.pathEdit = \"/edit\";\r\n    this.pathDelete = \"/delete\";\r\n  }\r\n\r\n  /**\r\n   * Method for count records\r\n   * @param {*} filters\r\n   * @param {*} joins\r\n   * @returns count records\r\n   */\r\n  async count(filters, joins) {\r\n    return await this.fetchPostService(\r\n      this.getRealPathHost() + this.pathCount,\r\n      JSON.stringify({ filters: filters, joins: joins })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Method for count records\r\n   * @param {*} filters\r\n   * @param {*} joins\r\n   * @returns count records\r\n   */\r\n  async countWithHandlerError(filters, joins) {\r\n    let responseMethod = null;\r\n    const self = this;\r\n    try {\r\n      responseMethod = await UtilsError.applyFunctionWithHandlerError(() => {\r\n        return self.count(filters, joins);\r\n      });\r\n    } catch (exception) {\r\n      responseMethod = UtilsError.getResponseMethodFromException(exception);\r\n    }\r\n    return responseMethod;\r\n  }\r\n\r\n  /**\r\n   * Method for list records\r\n   * @param {*} fields\r\n   * @param {*} filters\r\n   * @param {*} joins\r\n   * @param {*} orders\r\n   * @param {*} limit\r\n   * @returns list of data\r\n   */\r\n  async list(fields, filters, joins, orders, limit) {\r\n    return await this.fetchPostService(\r\n      this.getRealPathHost() + this.pathList,\r\n      JSON.stringify({\r\n        fields: fields,\r\n        filters: filters,\r\n        orders: orders,\r\n        joins: joins,\r\n        limit: limit,\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Method for list records\r\n   * @param {*} fields\r\n   * @param {*} filters\r\n   * @param {*} joins\r\n   * @param {*} orders\r\n   * @param {*} limit\r\n   * @returns list of data\r\n   */\r\n  async listWithHandlerError(fields, filters, joins, orders, limit) {\r\n    let responseMethod = null;\r\n    const self = this;\r\n    try {\r\n      responseMethod = await UtilsError.applyFunctionWithHandlerError(() => {\r\n        return self.list(fields, filters, joins, orders, limit);\r\n      });\r\n    } catch (exception) {\r\n      responseMethod = UtilsError.getResponseMethodFromException(exception);\r\n    }\r\n    return responseMethod;\r\n  }\r\n\r\n  /**\r\n   * Method for read records\r\n   * @param {*} pkValues\r\n   * @param {*} joins\r\n   * @returns element to read\r\n   */\r\n  async read(pkValues, joins) {\r\n    return await this.fetchPostService(\r\n      this.getRealPathHost() + this.pathRead,\r\n      JSON.stringify({ data: pkValues, joins: joins })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Method for read records\r\n   * @param {*} pkValues\r\n   * @param {*} joins\r\n   * @returns element to read\r\n   */\r\n  async readWithHandlerError(pkValues, joins) {\r\n    let responseMethod = null;\r\n    const self = this;\r\n    try {\r\n      responseMethod = await UtilsError.applyFunctionWithHandlerError(() => {\r\n        return self.read(pkValues, joins);\r\n      });\r\n    } catch (exception) {\r\n      responseMethod = UtilsError.getResponseMethodFromException(exception);\r\n    }\r\n    return responseMethod;\r\n  }\r\n\r\n  /**\r\n   * Method for load new record\r\n   * @returns new element\r\n   */\r\n  async loadNew() {\r\n    return await this.fetchPostService(\r\n      this.getRealPathHost() + this.pathLoadNew,\r\n      JSON.stringify({ data: null })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Method for load new record\r\n   * @returns new element\r\n   */\r\n  async loadNewWithHandlerError() {\r\n    let responseMethod = null;\r\n    const self = this;\r\n    try {\r\n      responseMethod = await UtilsError.applyFunctionWithHandlerError(() => {\r\n        return self.loadNew();\r\n      });\r\n    } catch (exception) {\r\n      responseMethod = UtilsError.getResponseMethodFromException(exception);\r\n    }\r\n    return responseMethod;\r\n  }\r\n\r\n  /**\r\n   * Method for edit record\r\n   * @param {*} element\r\n   * @returns element edited\r\n   */\r\n  async edit(element) {\r\n    return await this.fetchPostService(\r\n      this.getRealPathHost() + this.pathEdit,\r\n      JSON.stringify({ data: element })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Method for edit record\r\n   * @param {*} element\r\n   * @returns element edited\r\n   */\r\n  async editNewWithHandlerError(element) {\r\n    let responseMethod = null;\r\n    const self = this;\r\n    try {\r\n      responseMethod = await UtilsError.applyFunctionWithHandlerError(() => {\r\n        return self.edit(element);\r\n      });\r\n    } catch (exception) {\r\n      responseMethod = UtilsError.getResponseMethodFromException(exception);\r\n    }\r\n    return responseMethod;\r\n  }\r\n\r\n  /**\r\n   * Method for add record\r\n   * @param {*} element\r\n   * @returns element added\r\n   */\r\n  async add(element) {\r\n    return await this.fetchPostService(\r\n      this.getRealPathHost() + this.pathAdd,\r\n      JSON.stringify({ data: element })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Method for add record\r\n   * @param {*} element\r\n   * @returns element added\r\n   */\r\n  async addWithHandlerError(element) {\r\n    let responseMethod = null;\r\n    const self = this;\r\n    try {\r\n      responseMethod = await UtilsError.applyFunctionWithHandlerError(() => {\r\n        return self.add(element);\r\n      });\r\n    } catch (exception) {\r\n      responseMethod = UtilsError.getResponseMethodFromException(exception);\r\n    }\r\n    return responseMethod;\r\n  }\r\n\r\n  /**\r\n   * Method for delete record\r\n   * @param {*} element\r\n   */\r\n  async delete(element) {\r\n    return await this.fetchPostService(\r\n      this.getRealPathHost() + this.pathDelete,\r\n      JSON.stringify({ data: element })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Method for delete record\r\n   * @param {*} element\r\n   */\r\n  async deleteWithHandlerError(element) {\r\n    let responseMethod = null;\r\n    const self = this;\r\n    try {\r\n      responseMethod = await UtilsError.applyFunctionWithHandlerError(() => {\r\n        return self.add(element);\r\n      });\r\n    } catch (exception) {\r\n      responseMethod = UtilsError.getResponseMethodFromException(exception);\r\n    }\r\n    return responseMethod;\r\n  }\r\n}\r\n","import React, { Suspense } from \"react\";\r\nimport \"./index.css\";\r\nimport BaseComponent from \"../base/baseComponent\";\r\nimport RFContext from \"../context\";\r\nimport PropTypes from \"prop-types\";\r\nimport HourglassSpinnerComponent from \"rfreactlib/spinners/hourglass\";\r\nimport UtilsError from \"../utils/UtilsError\";\r\n\r\nexport class Modal {\r\n  constructor() {\r\n    this.baseComponent = null;\r\n    this.modalComponent = null;\r\n  }\r\n}\r\n\r\nconst renderLoaderModal = () => <HourglassSpinnerComponent />;\r\n\r\nexport default class ModalComponent extends BaseComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.closeModal = this.closeModal.bind(this);\r\n    this.refModal = React.createRef();\r\n    this.onFocusInput = this.onFocusInput.bind(this);\r\n    this.idFirsFocusableInput = this.uniqueID();\r\n    this.idLastFocussableInput = this.uniqueID();\r\n    this.refFirstFocus = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.refFirstFocus != null) {\r\n      let focusableElement = this.refFirstFocus.current;\r\n      setTimeout(function () {\r\n        focusableElement.focus();\r\n      }, 50);\r\n    }\r\n  }\r\n\r\n  focusInput = (component) => {\r\n    if (component != null && component != undefined) {\r\n      document.getElementById(component.id).focus();\r\n      document.getElementById(component.id).select();\r\n    }\r\n  };\r\n\r\n  defaultStateProps() {\r\n    return {\r\n      changed: false,\r\n    };\r\n  }\r\n\r\n  defaultRender() {\r\n    if (\r\n      this.props.modal.modalComponent == null ||\r\n      this.props.modal.modalComponent == undefined\r\n    ) {\r\n      this.props.modal.modalComponent = this;\r\n    }\r\n\r\n    let container = (\r\n      <Suspense fallback={renderLoaderModal()}>\r\n        <div\r\n          ref={this.refModal}\r\n          className=\"ModalComponentMask\"\r\n          style={{ zIndex: RFContext.dom.getUpdatedZIndexStr() }}\r\n          onClick={(event) => this.closeModal(event)}\r\n        >\r\n          <div\r\n            className={\"ModalComponentContainer \" + this.props.classModal}\r\n            style={{ zIndex: RFContext.dom.getUpdatedZIndexStr() }}\r\n          >\r\n            <div className=\"ModalComponentHeader\">\r\n              <div className=\"ModalComponentHeaderLabel\">\r\n                {this.props.title}\r\n              </div>\r\n              <div className=\"ModalComponentHeaderIcon\">\r\n                <button\r\n                  className=\"ModalComponentHeaderIconButton\"\r\n                  onClick={(event) => this.closeModal(event, true)}\r\n                >\r\n                  <i className=\"fas fa-times\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div className=\"ModalComponentBody\">\r\n              <div className=\"ModalComponentBodyFocusable\">\r\n                <input\r\n                  ref={this.refFirstFocus}\r\n                  id={this.idFirsFocusableInput}\r\n                  className=\"ModalComponentBodyFocusableInput\"\r\n                  onFocus={(event) => this.onFocusInput(event)}\r\n                />\r\n              </div>\r\n              {this.props.childs}\r\n              <div className=\"ModalComponentBodyFocusable\">\r\n                <input\r\n                  id={this.idLastFocussableInput}\r\n                  className=\"ModalComponentBodyFocusableInput\"\r\n                  onFocus={(event) =>\r\n                    this.onFocusInput(event, this.idFirsFocusableInput)\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Suspense>\r\n    );\r\n\r\n    return container;\r\n  }\r\n\r\n  onFocusInput(event, idFocusComponent) {\r\n    if (idFocusComponent != null && idFocusComponent != undefined) {\r\n      event.preventDefault();\r\n      document.getElementById(idFocusComponent).focus();\r\n    }\r\n  }\r\n\r\n  async closeModal(event, force) {\r\n    const self = this;\r\n    let responseMethod = null;\r\n\r\n    try {\r\n      responseMethod = await UtilsError.applyFunctionWithHandlerError(() => {\r\n        if (force == null || force == undefined) {\r\n          force = false;\r\n        }\r\n        if (\r\n          (event != null &&\r\n            event.target.classList.contains(\"ModalComponentMask\")) ||\r\n          force\r\n        ) {\r\n          let modal = document.getElementById(self.props.modalId);\r\n          modal.parentElement.removeChild(modal);\r\n        }\r\n      });\r\n    } catch (exception) {\r\n      responseMethod = UtilsError.getResponseMethodFromException(exception);\r\n    }\r\n\r\n    if (responseMethod.hasError()) {\r\n      this.renderError(responseMethod);\r\n    }\r\n  }\r\n}\r\n\r\nModalComponent.propTypes = {\r\n  app: PropTypes.object,\r\n  baseComponent: PropTypes.object,\r\n  childs: PropTypes.object,\r\n  classModal: PropTypes.string,\r\n  title: PropTypes.string,\r\n  modalId: PropTypes.string,\r\n  modal: PropTypes.object,\r\n  params: PropTypes.object,\r\n};\r\n\r\nModalComponent.defaultProps = {\r\n  baseComponent: null,\r\n  childs: null,\r\n  classModal: \"\",\r\n  title: \"\",\r\n  modalId: null,\r\n  modal: null,\r\n  params: null,\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport BaseCrudService from '../../base/baseCrudService';\r\nimport ModalComponent, { Modal } from 'rfreactlib/modal';\r\n/**\r\n * Base class for realice resolve data from application \r\n */\r\nexport default class ContextResolver {\r\n\r\n    constructor() {\r\n        // Quick acess for application \r\n        this.permisionsAll = {};\r\n        // Map services for application\r\n        this.mapServices = {};\r\n        this.mapUrlsServices = {};\r\n    }\r\n\r\n    /**\r\n     * Method to generate unique id\r\n     */\r\n    randomId() {\r\n        return Math.random().toString(36).slice(2);\r\n    }\r\n\r\n    /**\r\n     * Method to get service by name\r\n     * @param {*} nameService \r\n     */\r\n    getService(nameService) {\r\n        let service = null;\r\n        if (nameService != null && nameService != undefined && nameService in this.mapServices) {\r\n            service = this.mapServices[nameService];\r\n        } else {\r\n            try {\r\n                if (nameService != null && nameService != undefined && nameService in this.mapUrlsServices) {\r\n                    let pathsService = this.mapUrlsServices[nameService];\r\n                    service = new BaseCrudService(pathsService[0], pathsService[1]);\r\n                    this.mapServices[nameService] = service;\r\n                }\r\n            } catch (ex) {\r\n                console.log(ex);\r\n            }\r\n        }\r\n        return service;\r\n    }\r\n\r\n    renderComponent(componentView, tab, modal) {\r\n\r\n        let permission = null;\r\n\r\n        if (componentView in this.permisionsAll) {\r\n            permission = this.permisionsAll[componentView];\r\n        }\r\n\r\n        let Component = null;\r\n        if (permission != null) {\r\n            Component = permission.componentUrl();\r\n        }\r\n\r\n        if (modal == null || modal == undefined) {\r\n            modal = null;\r\n        }\r\n\r\n        return <Component tab={tab} permission={permission} modal={modal} />;\r\n    }\r\n\r\n    renderModal(componentView, tab, baseComponent, params) {\r\n\r\n        let modal = new Modal();\r\n        modal.baseComponent = baseComponent;\r\n\r\n        let componentRender = this.renderComponent(componentView, tab, modal);\r\n\r\n        if (componentRender != null && componentRender != undefined) {\r\n            let modals = document.getElementById('modals' + tab.index);\r\n\r\n            let id = this.uniqueID();\r\n\r\n            let modalCreated = document.createElement(\"DIV\");\r\n            modalCreated.id = id;\r\n            modalCreated.classList.add('ModalComponent');\r\n\r\n            modals.appendChild(modalCreated);\r\n\r\n            let title = componentRender.props.permission.titleModal();\r\n            let classModal = componentRender.props.permission.styleClassModal;\r\n\r\n            ReactDOM.render(<ModalComponent baseComponent={baseComponent} childs={componentRender} title={title} modalId={id} classModal={classModal} modal={modal} params={params} />, document.getElementById(id));\r\n        }\r\n    }\r\n\r\n    uniqueID() {\r\n        return this.chr4() + this.chr4() +\r\n            '-' + this.chr4() +\r\n            '-' + this.chr4() +\r\n            '-' + this.chr4() +\r\n            '-' + this.chr4() + this.chr4() + this.chr4();\r\n    }\r\n\r\n    chr4() {\r\n        return Math.random().toString(16).slice(-4);\r\n    }\r\n\r\n    \r\n}\r\n\r\n","\r\n/**\r\n * Constants for RF library\r\n */\r\nexport default class RFConstants {\r\n    /**\r\n     * Config properties\r\n     */\r\n    static LOADER_CONFIG_PROPERTIES = {\r\n        \"CONTEXTRESOLVER\": \"CONTEXTRESOLVER\",\r\n        \"PERMISIONSALL\": \"PERMISIONSALL\",\r\n        \"BASESERVICES\": \"BASESERVICES\"\r\n    }\r\n\r\n    /**\r\n     * Key for confirm component \r\n     */\r\n    static CONFIRM_COMPONENT = \"ConfirmComponent\";\r\n}","\r\n/**\r\n * Base class for permission\r\n */\r\nexport default class Permission {\r\n\r\n\r\n    constructor(key, componentUrl, permisions, titleModal, styleClassModal) {\r\n        this.key = key;\r\n        this.componentUrl = componentUrl;\r\n        this.permisions = permisions;\r\n        this.titleModal = titleModal;\r\n        this.styleClassModal = styleClassModal;\r\n    }\r\n\r\n}","// Suported locales default \r\nimport en from \"./en.json\";\r\n\r\nexport default { en };","import Dom from \"rfreactlib/dom\";\r\nimport I18nTranslate from \"rfreactlib/i18n\";\r\nimport ContextResolver from \"rfreactlib/resolvers/context\";\r\nimport RFContext from \"rfreactlib/context\";\r\nimport loaderconfig from \"rfreactlib/loaderconfig\";\r\nimport locales from \"../../i18n/locales\";\r\nimport RFConstants from \"rfreactlib/constants\";\r\nimport Permission from \"rfreactlib/permission\";\r\nimport React from \"react\";\r\n\r\n/**\r\n * Method for load config for app\r\n */\r\nexport default function loadConfigApp() {\r\n  RFContext.i18n = new I18nTranslate(null);\r\n  RFContext.dom = new Dom();\r\n  RFContext.contextResolver = new ContextResolver();\r\n\r\n  const mapOtherProperties = {};\r\n\r\n  // load locales\r\n  const arLocales = loadConfigLocales();\r\n  // Load services\r\n\r\n  // Load permisions all\r\n  loadConfigPermisionsAll(mapOtherProperties);\r\n\r\n  loaderconfig(arLocales, mapOtherProperties);\r\n}\r\n\r\n/**\r\n * Method for load locales\r\n */\r\nfunction loadConfigLocales() {\r\n  const arLocales = [locales];\r\n  return arLocales;\r\n}\r\n\r\n\r\n\r\n/**\r\n * Method for load config permisions all\r\n * @param {*} mapOtherProperties\r\n */\r\nfunction loadConfigPermisionsAll(mapOtherProperties) {\r\n  const permisionsAll = {};\r\n\r\n  mapOtherProperties[\r\n    RFConstants.LOADER_CONFIG_PROPERTIES.PERMISIONSALL\r\n  ] = permisionsAll;\r\n\r\n  permisionsAll[\"HexToStringComponent\"] = new Permission(\r\n    \"HexToStringComponent\",\r\n    function () {\r\n      return React.lazy(() => import(\"app/core/components/hextostring\"));\r\n    },\r\n    null,\r\n    null,\r\n    null\r\n  );\r\n\r\n  permisionsAll[\"HexToDecimalComponent\"] = new Permission(\r\n    \"HexToDecimalComponent\",\r\n    function () {\r\n      return React.lazy(() => import(\"app/core/components/hextodecimal\"));\r\n    },\r\n    null,\r\n    null,\r\n    null\r\n  );\r\n\r\n  permisionsAll[\"HexToBinaryComponent\"] = new Permission(\r\n    \"HexToBinaryComponent\",\r\n    function () {\r\n      return React.lazy(() => import(\"app/core/components/hextobinary\"));\r\n    },\r\n    null,\r\n    null,\r\n    null\r\n  );\r\n\r\n}\r\n","import React from 'react';\r\nimport I18nTranslate from 'rfreactlib/i18n';\r\nimport RFContext from 'rfreactlib/context';\r\nimport ContextResolver from 'rfreactlib/resolvers/context';\r\nimport Dom from 'rfreactlib/dom';\r\nimport RFConstants from 'rfreactlib/constants';\r\nimport Permission from 'rfreactlib/permission';\r\n\r\n/**\r\n * Method to generate configuration for application\r\n * @param {*} locales is a array for locale files from application \r\n * @param {*} mapOtherProperties is a map for other properties\r\n */\r\nexport default function (locales, mapOtherProperties) {\r\n    // Load locales \r\n    RFContext.i18n = new I18nTranslate(locales);\r\n    // Load Dom\r\n    RFContext.dom = new Dom();\r\n\r\n    // Load access\r\n    if (mapOtherProperties != null && mapOtherProperties[RFConstants.LOADER_CONFIG_PROPERTIES.CONTEXTRESOLVER] != null && mapOtherProperties[RFConstants.LOADER_CONFIG_PROPERTIES.CONTEXTRESOLVER] != undefined) {\r\n        RFContext.contextResolver = mapOtherProperties[RFConstants.LOADER_CONFIG_PROPERTIES.CONTEXTRESOLVER];\r\n    } else {\r\n        RFContext.contextResolver = new ContextResolver();\r\n    }\r\n\r\n    if (mapOtherProperties == null) {\r\n        mapOtherProperties = {};\r\n    }\r\n\r\n    if (!(RFConstants.LOADER_CONFIG_PROPERTIES.PERMISIONSALL in mapOtherProperties)) {\r\n        mapOtherProperties[RFConstants.LOADER_CONFIG_PROPERTIES.PERMISIONSALL] = {};\r\n    }\r\n\r\n    // Load sites default permit all \r\n    if ((RFConstants.LOADER_CONFIG_PROPERTIES.PERMISIONSALL in mapOtherProperties)) {\r\n        mapOtherProperties[RFConstants.LOADER_CONFIG_PROPERTIES.PERMISIONSALL][RFConstants.CONFIRM_COMPONENT] = new Permission(RFConstants.CONFIRM_COMPONENT,\r\n            function () {\r\n                return React.lazy(() => import('rfreactlib/confirm'));\r\n            },\r\n            null,\r\n            function (extaData) {\r\n                return RFContext.i18n.__(\"rf.confirm\")\r\n            },\r\n            \"ConfirmModal\"\r\n        );\r\n    }\r\n\r\n    // Load sites permit all \r\n    if (mapOtherProperties != null) {\r\n        if (RFConstants.LOADER_CONFIG_PROPERTIES.PERMISIONSALL in mapOtherProperties) {\r\n            RFContext.contextResolver.permisionsAll = mapOtherProperties[RFConstants.LOADER_CONFIG_PROPERTIES.PERMISIONSALL];\r\n        }\r\n        if (RFConstants.LOADER_CONFIG_PROPERTIES.BASESERVICES in mapOtherProperties) {\r\n            RFContext.contextResolver.mapUrlsServices = mapOtherProperties[RFConstants.LOADER_CONFIG_PROPERTIES.BASESERVICES];\r\n        }\r\n    }\r\n}","import React from \"react\";\nimport BaseApp from \"./rfreactlib/base/baseApp\";\nimport MenuComponent from \"rfreactlib/menu\";\nimport loadConfigApp from \"./app/core/config\";\nimport RFContext from \"./rfreactlib/context\";\n\n/**\n * Class for load app\n */\nexport default class App extends BaseApp {\n  constructor(props) {\n    super(props);\n  }\n\n  /**\n   * Method for load config for app\n   */\n  loadConfigBaseApp() {\n    loadConfigApp();\n  }\n\n  renderMenu() {\n    return (\n      <MenuComponent\n        app={this}\n        menuContentTemplateFn={this.menuContentTemplateFn}\n      />\n    );\n  }\n\n  menuContentTemplateFn(menuComponent) {\n    return (\n      <div\n        key=\"MenuHexLevel0\"\n        id=\"MenuHexLevel0\"\n        className=\"MenuItemLevel0\"\n        level=\"0\"\n      >\n        <i className=\"MenuItemLevelIcon0 fas fa-caret-right\"></i>\n        <div\n          className=\"MenuItemLevelTitle0\"\n          onClick={() => menuComponent.onMenuClickLevel0(\"MenuHexLevel0\")}\n        >\n          {RFContext.i18n.__(\"app.core.menu.hex.name\")}\n        </div>\n        <div className=\"MenuItemLevelItems0\">\n          <div\n            id=\"MenuHexHexTostringLevel1\"\n            className=\"MenuItemLevel1\"\n            level=\"1\"\n          >\n            <div\n              className=\"MenuItemLevelTitle1\"\n              onClick={() =>\n                menuComponent.onMenuClickLevel1(\n                  \"MenuHexHexTostringLevel1\",\n                  \"MenuHexLevel0\",\n                  RFContext.i18n.__(\"app.core.menu.hex.hexToString\"),\n                  \"HexToStringComponent\"\n                )\n              }\n            >\n              {RFContext.i18n.__(\"app.core.menu.hex.hexToString\")}\n            </div>\n          </div>\n          <div\n            id=\"MenuHexHexToDecimalLevel1\"\n            className=\"MenuItemLevel1\"\n            level=\"1\"\n          >\n            <div\n              className=\"MenuItemLevelTitle1\"\n              onClick={() =>\n                menuComponent.onMenuClickLevel1(\n                  \"MenuHexHexToDecimalLevel1\",\n                  \"MenuHexLevel0\",\n                  RFContext.i18n.__(\"app.core.menu.hex.hexToDecimal\"),\n                  \"HexToDecimalComponent\"\n                )\n              }\n            >\n              {RFContext.i18n.__(\"app.core.menu.hex.hexToDecimal\")}\n            </div>\n          </div>\n          <div\n            id=\"MenuHexHexToBinarylLevel1\"\n            className=\"MenuItemLevel1\"\n            level=\"1\"\n          >\n            <div\n              className=\"MenuItemLevelTitle1\"\n              onClick={() =>\n                menuComponent.onMenuClickLevel1(\n                  \"MenuHexHexToBinarylLevel1\",\n                  \"MenuHexLevel0\",\n                  RFContext.i18n.__(\"app.core.menu.hex.hexToBinary\"),\n                  \"HexToBinaryComponent\"\n                )\n              }\n            >\n              {RFContext.i18n.__(\"app.core.menu.hex.hexToBinary\")}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component, Suspense } from \"react\";\r\nimport \"./index.css\";\r\nimport ErrorHandlerComponent from \"../../error\";\r\nimport HourglassSpinnerComponent from \"rfreactlib/spinners/hourglass\";\r\nimport RFContext from \"rfreactlib/context\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n/**\r\n * Tab route for draw tab content\r\n */\r\nexport default class TabRoute extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.tab = null;\r\n    this.errorTest = this.errorTest.bind(this);\r\n    if (\r\n      this.props.functionLoadConfig != null &&\r\n      this.props.functionLoadConfig != undefined\r\n    ) {\r\n      this.props.functionLoadConfig();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method for simulate error\r\n   */\r\n  errorTest() {\r\n    let test = 1;\r\n    if (test.trim() == \"asd\") {\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const renderLoaderTab = () => <HourglassSpinnerComponent />;\r\n\r\n    const tabParam = this.props.match.params.tab;\r\n\r\n    let beforeComponents = null;\r\n\r\n    if (\r\n      this.props.functionLoadBeforeComponents != null &&\r\n      this.props.functionLoadBeforeComponents != undefined\r\n    ) {\r\n      beforeComponents = this.props.functionLoadBeforeComponents();\r\n    }\r\n\r\n    if (this.tab == null || this.tab == undefined) {\r\n      this.tab = JSON.parse(tabParam);\r\n\r\n      this.tab.componentViewRender = RFContext.contextResolver.renderComponent(\r\n        this.tab.componentView,\r\n        this.tab\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Suspense fallback={renderLoaderTab()}>\r\n        <ErrorHandlerComponent>\r\n          <div className=\"TabRoute\" key={this.tab.key}>\r\n            {beforeComponents}\r\n            {this.tab.componentViewRender}\r\n          </div>\r\n        </ErrorHandlerComponent>\r\n      </Suspense>\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Properties for AppRoute\r\n */\r\nTabRoute.propTypes = {\r\n  functionLoadConfig: PropTypes.any,\r\n  functionLoadBeforeComponents: PropTypes.any,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport TabRoute from \"../tabRoute\";\r\n\r\n/**\r\n * Default class for routin application\r\n */\r\nexport default class AppRoute extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    const AppComponent = this.props.AppComponent;\r\n    const defaultOherRoutes = this.props.otherRoutes;\r\n    return (\r\n      <Router>\r\n        <div className=\"AppRoute\">\r\n          {/* <nav className=\"AppRouteNav\">\r\n              <ul>\r\n                <li>\r\n                  <Link to=\"/\">Home</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/tabRoute\">Tab</Link>\r\n                </li>\r\n              </ul>\r\n            </nav> */}\r\n\r\n          {/* A <Switch> looks through its children <Route>s and\r\n              renders the first one that matches the current URL. */}\r\n          <Switch>\r\n            <Route\r\n              path=\"/tabRoute/:tab\"\r\n              render={(props) => (\r\n                <TabRoute\r\n                  {...props}\r\n                  functionLoadConfig={this.props.functionLoadConfig}\r\n                  functionLoadBeforeComponents={\r\n                    this.props.functionLoadBeforeComponents\r\n                  }\r\n                />\r\n              )}\r\n            />\r\n            <Route path=\"/\" render={(props) => <AppComponent {...props} />} />\r\n            {defaultOherRoutes}\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Properties for AppRoute\r\n */\r\nAppRoute.propTypes = {\r\n  /**\r\n   * App component for route\r\n   */\r\n  AppComponent: PropTypes.any,\r\n  otherRoutes: PropTypes.any,\r\n  functionLoadConfig: PropTypes.any,\r\n  functionLoadBeforeComponents: PropTypes.any,\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport AppRoute from \"./rfreactlib/router/appRouter\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport RFUserSession, { setUserLogged } from \"./rfreactlib/session\";\nimport loadConfigApp from \"./app/core/config\";\n\n// Simulate usser logged\nlet usserSession = new RFUserSession();\nusserSession.nick = \"RFIndustriesPage\";\n\nsetUserLogged(usserSession);\n\nReactDOM.render(\n  <AppRoute\n    AppComponent={App}\n    functionLoadConfig={loadConfigApp}\n  />,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}